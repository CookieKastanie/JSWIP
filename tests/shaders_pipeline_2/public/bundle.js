/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../../Akila/collision.js":
/*!************************************!*\
  !*** D:/GitHub/Akila/collision.js ***!
  \************************************/
/*! exports provided: BroadField2d, RayRaster2d, Collider2d, SAT2d */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _collision_BroadField2d__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./collision/BroadField2d */ \"../../../Akila/collision/BroadField2d.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BroadField2d\", function() { return _collision_BroadField2d__WEBPACK_IMPORTED_MODULE_0__[\"BroadField2d\"]; });\n\n/* harmony import */ var _collision_RayRaster2d__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./collision/RayRaster2d */ \"../../../Akila/collision/RayRaster2d.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RayRaster2d\", function() { return _collision_RayRaster2d__WEBPACK_IMPORTED_MODULE_1__[\"RayRaster2d\"]; });\n\n/* harmony import */ var _collision_Collider2d__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./collision/Collider2d */ \"../../../Akila/collision/Collider2d.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Collider2d\", function() { return _collision_Collider2d__WEBPACK_IMPORTED_MODULE_2__[\"Collider2d\"]; });\n\n/* harmony import */ var _collision_SAT2d__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./collision/SAT2d */ \"../../../Akila/collision/SAT2d.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SAT2d\", function() { return _collision_SAT2d__WEBPACK_IMPORTED_MODULE_3__[\"SAT2d\"]; });\n\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/collision.js?");

/***/ }),

/***/ "../../../Akila/collision/BroadField2d.js":
/*!*************************************************!*\
  !*** D:/GitHub/Akila/collision/BroadField2d.js ***!
  \*************************************************/
/*! exports provided: BroadField2d */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BroadField2d\", function() { return BroadField2d; });\nclass BroadField2d {\r\n    constructor() {\r\n        this.field = new Map();\r\n    }\r\n\r\n    add(x, y, elem) {\r\n        const index = BroadField2d.coordToIndex(x, y);\r\n\r\n        let set = this.field.get(index);\r\n\r\n        if(!set) {\r\n            set = new Set();\r\n            this.field.set(index, set);\r\n        }\r\n\r\n        set.add(elem);\r\n    }\r\n\r\n    query(x, y, buffer = new Set()) {\r\n        const index = BroadField2d.coordToIndex(x, y);\r\n\r\n        const set = this.field.get(index);\r\n        if(set) {\r\n            for(let elem of set) buffer.add(elem);\r\n        }\r\n\r\n        return buffer;\r\n    }\r\n\r\n    static coordToIndex(x, y) {\r\n        return Math.floor(x) * BroadField2d.MAX_FIELD_VALUE + Math.floor(y);\r\n    }\r\n\r\n    clearAll() {\r\n        this.field.clear();\r\n    }\r\n}\r\n\r\nBroadField2d.MAX_FIELD_VALUE = Math.floor(Math.sqrt(Number.MAX_SAFE_INTEGER / 2));\r\nBroadField2d.MIN_FIELD_VALUE = -BroadField2d.MAX_FIELD_VALUE;\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/collision/BroadField2d.js?");

/***/ }),

/***/ "../../../Akila/collision/Collider2d.js":
/*!***********************************************!*\
  !*** D:/GitHub/Akila/collision/Collider2d.js ***!
  \***********************************************/
/*! exports provided: Collider2d */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Collider2d\", function() { return Collider2d; });\nclass Axes2d {\r\n    constructor(x1, y1, x2, y2) {\r\n        this.origin = new Float32Array([x1, y1]);\r\n        this.direction = new Float32Array([-(y2 - y1), (x2 - x1)]);\r\n        const len = Math.hypot(this.direction[0], this.direction[1]);\r\n        if(len > 0) {\r\n            this.direction[0] = this.direction[0] / len;\r\n            this.direction[1] = this.direction[1] / len;\r\n        }\r\n    }\r\n}\r\n\r\nclass Collider2d {\r\n    constructor(vertices, linked = true, loop = true) {\r\n        this.vertices = new Array();\r\n        this.axes = new Array();\r\n\r\n        for(let i = 0; i < vertices.length; i += 2) {\r\n            this.vertices.push(new Float32Array([vertices[i], vertices[i + 1]]));\r\n        }\r\n\r\n        const step = linked ? 2 : 4;\r\n        const length = loop && linked ? vertices.length : vertices.length - 2;\r\n\r\n        for(let i = 0; i < length; i += step) {\r\n            this.axes.push(new Axes2d(vertices[i], vertices[i + 1], vertices[(i + 2) % vertices.length], vertices[(i + 3) % vertices.length]));\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/collision/Collider2d.js?");

/***/ }),

/***/ "../../../Akila/collision/RayRaster2d.js":
/*!************************************************!*\
  !*** D:/GitHub/Akila/collision/RayRaster2d.js ***!
  \************************************************/
/*! exports provided: RayRaster2d */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RayRaster2d\", function() { return RayRaster2d; });\n/* harmony import */ var _BroadField2d__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BroadField2d */ \"../../../Akila/collision/BroadField2d.js\");\n\r\n\r\nclass RayRaster2d {\r\n    static addToField(x0, y0, x1, y1, field = new _BroadField2d__WEBPACK_IMPORTED_MODULE_0__[\"BroadField2d\"](), data) {\r\n        /*const dy = y1 - y0;\r\n        const dx = x1 - x0;\r\n        \r\n        if(dx == 0 && dy == 0) {\r\n            field.add(x0, y0, data);\r\n            return;\r\n        }*/\r\n\r\n        RayRaster2d.currentField = field;\r\n\r\n        const xDir = (x1 > x0);\r\n        const yDir = (y1 > y0);\r\n        const diff = (xDir ^ yDir) ? 1 : 0;\r\n\r\n        if (xDir) RayRaster2d._lookX(x0, y0, x1, y1, 0, data);\r\n        else RayRaster2d._lookX(x1, y1, x0, y0, diff, data);\r\n        \r\n        if (yDir) RayRaster2d._lookY(x0, y0, x1, y1, 0, data);\r\n        else RayRaster2d._lookY(x1, y1, x0, y0, diff, data);\r\n    }\r\n\r\n    static _lookX(x0, y0, x1, y1, dec, data) {\r\n        RayRaster2d.currentField.add(x0, y0, data);\r\n\r\n        const dy = y1 - y0;\r\n        const dx = x1 - x0;\r\n        const m = dy / dx;\r\n\r\n        for(let x = Math.floor(x0) + 1; x <= x1; ++x) {\r\n            const y = m * (x - x0) + y0;\r\n            RayRaster2d.currentField.add(x - dec, y, data);\r\n        }\r\n    }\r\n\r\n    static _lookY(x0, y0, x1, y1, dec, data) {\r\n        RayRaster2d.currentField.add(x0, y0, data);\r\n\r\n        const dy = y1 - y0;\r\n        const dx = x1 - x0;\r\n        const m = dx / dy;\r\n\r\n        for(let y = Math.floor(y0) + 1; y <= y1; ++y) {\r\n            const x =  m * (y - y0) + x0;\r\n            RayRaster2d.currentField.add(x, y - dec, data);\r\n        }\r\n    }\r\n}\r\n\r\nRayRaster2d.currentField = null;\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/collision/RayRaster2d.js?");

/***/ }),

/***/ "../../../Akila/collision/SAT2d.js":
/*!******************************************!*\
  !*** D:/GitHub/Akila/collision/SAT2d.js ***!
  \******************************************/
/*! exports provided: SAT2d */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SAT2d\", function() { return SAT2d; });\nconst dot = (v1, v2) => {\r\n    return v1[0] * v2[0] + v1[1] * v2[1];\r\n}\r\n\r\nconst multMat3 = (out, a, m, z = 1) => {\r\n    const x = a[0], y = a[1];\r\n    out[0] = x * m[0] + y * m[3] + z * m[6];\r\n    out[1] = x * m[1] + y * m[4] + z * m[7];\r\n\r\n    return out;\r\n}\r\n\r\nclass SAT2d {\r\n    static getMin(colliderA, matA, colliderB, matB, buffer = {axe: new Float32Array(2)}) {\r\n        buffer.min = 1000;\r\n\r\n        //////////////////////////////////////////////////////////\r\n        /*for(const axe of colliderA.axes) {\r\n            multMat3(SAT2d.bufferN, axe.direction, matA, 0);\r\n            multMat3(SAT2d.bufferA, axe.origin, matA, 1);\r\n\r\n            const ref = dot(SAT2d.bufferA, SAT2d.bufferN);\r\n\r\n            let localMin = 0;\r\n            for(const vertex of colliderB.vertices) {\r\n                multMat3(SAT2d.bufferB, vertex, matB, 1);\r\n                const val = dot(SAT2d.bufferB, SAT2d.bufferN);\r\n                const pos = val - ref;\r\n\r\n                if(pos >= 0) continue;\r\n\r\n                if(pos > buffer.min) {\r\n                    localMin = pos;\r\n                    buffer.min = pos;\r\n                    buffer.axe[0] = SAT2d.bufferN[0];\r\n                    buffer.axe[1] = SAT2d.bufferN[1];\r\n                }\r\n            }\r\n\r\n            if(localMin >= 0) return null;\r\n        }*/\r\n        //////////////////////////////////////////////////////////\r\n\r\n        for(const axe of colliderB.axes) {\r\n            multMat3(SAT2d.bufferN, axe.direction, matB, 0);\r\n            multMat3(SAT2d.bufferA, axe.origin, matB, 1);\r\n\r\n            const ref = dot(SAT2d.bufferA, SAT2d.bufferN);\r\n\r\n            let localMin = 0;\r\n            for(const vertex of colliderA.vertices) {\r\n                multMat3(SAT2d.bufferB, vertex, matA, 1);\r\n                const val = dot(SAT2d.bufferB, SAT2d.bufferN);\r\n                const pos = val - ref;\r\n\r\n                //if(pos >= 0) continue;\r\n\r\n                if(Math.abs(pos) < buffer.min) {\r\n                //    localMin = pos;\r\n                    buffer.min = pos;\r\n                    buffer.axe[0] = SAT2d.bufferN[0];\r\n                    buffer.axe[1] = SAT2d.bufferN[1];\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            //if(localMin >= 0) return null;\r\n        }\r\n\r\n        return buffer;\r\n    }\r\n}\r\n\r\nSAT2d.bufferA = new Float32Array(2);\r\nSAT2d.bufferB = new Float32Array(2);\r\nSAT2d.bufferN = new Float32Array(2);\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/collision/SAT2d.js?");

/***/ }),

/***/ "../../../Akila/inputs.js":
/*!*********************************!*\
  !*** D:/GitHub/Akila/inputs.js ***!
  \*********************************/
/*! exports provided: Keyboard, Mouse, Gamepad, Gesture */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _inputs_Keyboard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inputs/Keyboard */ \"../../../Akila/inputs/Keyboard.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Keyboard\", function() { return _inputs_Keyboard__WEBPACK_IMPORTED_MODULE_0__[\"Keyboard\"]; });\n\n/* harmony import */ var _inputs_Mouse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inputs/Mouse */ \"../../../Akila/inputs/Mouse.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Mouse\", function() { return _inputs_Mouse__WEBPACK_IMPORTED_MODULE_1__[\"Mouse\"]; });\n\n/* harmony import */ var _inputs_Gamepad__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./inputs/Gamepad */ \"../../../Akila/inputs/Gamepad.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Gamepad\", function() { return _inputs_Gamepad__WEBPACK_IMPORTED_MODULE_2__[\"Gamepad\"]; });\n\n/* harmony import */ var _inputs_Gesture__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./inputs/Gesture */ \"../../../Akila/inputs/Gesture.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Gesture\", function() { return _inputs_Gesture__WEBPACK_IMPORTED_MODULE_3__[\"Gesture\"]; });\n\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/inputs.js?");

/***/ }),

/***/ "../../../Akila/inputs/Gamepad.js":
/*!*****************************************!*\
  !*** D:/GitHub/Akila/inputs/Gamepad.js ***!
  \*****************************************/
/*! exports provided: Gamepad */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Gamepad\", function() { return Gamepad; });\n/* harmony import */ var _time_Time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../time/Time */ \"../../../Akila/time/Time.js\");\n\r\n\r\nclass Gamepad {\r\n    constructor() {\r\n        if(Gamepad.instance != null) return;\r\n        Gamepad.instance = this;\r\n        _time_Time__WEBPACK_IMPORTED_MODULE_0__[\"Time\"].gamepad = this.update;\r\n\r\n        this.states = new Array();\r\n        this.connect = [false, false, false, false];\r\n        this.setDeadZone(0.1);\r\n\r\n        for(let i = 0; i < 4; ++i) this.clear(i);\r\n\r\n        window.addEventListener(\"gamepadconnected\", event => {\r\n            this.connect[event.gamepad.index] = true;\r\n        });\r\n\r\n        window.addEventListener(\"gamepaddisconnected\", event => {\r\n            this.clear(event.gamepad.index);\r\n            this.connect[event.gamepad.index] = false;\r\n        });\r\n    }\r\n\r\n    clear(player = Gamepad.PLAYER1) {\r\n        const buttons = new Array();\r\n\r\n        for(let i = 0; i < 17; ++i) buttons.push({value: 0});\r\n\r\n        Gamepad.instance.states[player] = {\r\n            axes: [0, 0, 0, 0],\r\n            buttons: buttons\r\n        };\r\n    }\r\n\r\n    update() {\r\n        let i = 0;\r\n        for (let m of navigator.getGamepads()) if(m) {\r\n            const state = Gamepad.instance.states[i++];\r\n            state.buttons = m.buttons;\r\n            //state.axes = m.axes;\r\n            state.axes[0] = m.axes[0] >= Gamepad.deadZone || m.axes[0] <= -Gamepad.deadZone ? m.axes[0] : 0;\r\n            state.axes[1] = m.axes[1] >= Gamepad.deadZone || m.axes[1] <= -Gamepad.deadZone ? m.axes[1] : 0;\r\n            state.axes[2] = m.axes[2] >= Gamepad.deadZone || m.axes[2] <= -Gamepad.deadZone ? m.axes[2] : 0;\r\n            state.axes[3] = m.axes[3] >= Gamepad.deadZone || m.axes[3] <= -Gamepad.deadZone ? m.axes[3] : 0;\r\n        }\r\n    }\r\n\r\n    isConnect(player = Gamepad.PLAYER1) {\r\n        return Gamepad.instance.connect[player];\r\n    }\r\n\r\n    setDeadZone(value) {\r\n        Gamepad.deadZone = value;\r\n    }\r\n\r\n    getButton(button, player = Gamepad.PLAYER1) {\r\n        return Gamepad.instance.states[player].buttons[button].value;\r\n    }\r\n\r\n    getStickAX(player = Gamepad.PLAYER1) {\r\n        return Gamepad.instance.states[player].axes[0];\r\n    }\r\n\r\n    getStickAY(player = Gamepad.PLAYER1) {\r\n        return Gamepad.instance.states[player].axes[1];\r\n    }\r\n\r\n    getStickBX(player = Gamepad.PLAYER1) {\r\n        return Gamepad.instance.states[player].axes[2];\r\n    }\r\n\r\n    getStickBY(player = Gamepad.PLAYER1) {\r\n        return Gamepad.instance.states[player].axes[3];\r\n    }\r\n}\r\n\r\nGamepad.instance = null;\r\n\r\nGamepad.PLAYER1 = 0;\r\nGamepad.PLAYER2 = 2;\r\nGamepad.PLAYER3 = 2;\r\nGamepad.PLAYER4 = 3;\r\n\r\nGamepad.A = 0;\r\nGamepad.B = 1;\r\nGamepad.X = 2;\r\nGamepad.Y = 3;\r\n\r\nGamepad.LEFT_BUTTON = 4;\r\nGamepad.RIGHT_BUTTON = 5;\r\n\r\nGamepad.LEFT_TRIGGER = 6;\r\nGamepad.RIGHT_TRIGGER = 7;\r\n\r\nGamepad.SELECT = 8;\r\nGamepad.START = 9;\r\n\r\nGamepad.LEFT_STICK = 10;\r\nGamepad.RIGHT_STICK = 11;\r\n\r\nGamepad.UP = 12;\r\nGamepad.DOWN = 13;\r\nGamepad.LEFT = 14;\r\nGamepad.RIGHT = 15;\r\n\r\nGamepad.GUIDE = 16;\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/inputs/Gamepad.js?");

/***/ }),

/***/ "../../../Akila/inputs/Gesture.js":
/*!*****************************************!*\
  !*** D:/GitHub/Akila/inputs/Gesture.js ***!
  \*****************************************/
/*! exports provided: Gesture */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Gesture\", function() { return Gesture; });\n/* harmony import */ var _time_Time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../time/Time */ \"../../../Akila/time/Time.js\");\n/* harmony import */ var _webgl_Display__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../webgl/Display */ \"../../../Akila/webgl/Display.js\");\n\r\n\r\n\r\nclass Gesture {\r\n    constructor() {\r\n        if(Gesture.instance != null) return;\r\n        Gesture.instance = this;\r\n\r\n        if(_webgl_Display__WEBPACK_IMPORTED_MODULE_1__[\"Display\"].ctx) this.setDOMElementReference(_webgl_Display__WEBPACK_IMPORTED_MODULE_1__[\"Display\"].ctx.canvas);\r\n        else this.setDOMElementReference({\r\n            getBoundingClientRect: () => {\r\n                return {left: 0, top: 0};\r\n            } \r\n        });\r\n\r\n        //document.getElementsByTagName('body')[0].requestFullscreen().then(console.log).catch(console.log)\r\n\r\n        this.clear();\r\n\r\n        window.addEventListener('touchstart', event => {\r\n            const rect = Gesture.domRef.getBoundingClientRect();\r\n            const t1 = event.touches[0];\r\n\r\n            Gesture.instance.x = t1.clientX - (rect.left + window.scrollX);\r\n            Gesture.instance.y = t1.clientY - (rect.top + window.scrollY);\r\n\r\n            Gesture.instance.lastX = Gesture.instance.x;\r\n            Gesture.instance.lastY = Gesture.instance.y;\r\n\r\n            Gesture.isTouch = true;\r\n        });\r\n\r\n        window.addEventListener('touchmove', event => {\r\n            const rect = Gesture.domRef.getBoundingClientRect();\r\n            const t1 = event.touches[0];\r\n            //console.log(t1)\r\n\r\n            Gesture.instance.x = t1.clientX - (rect.left + window.scrollX);\r\n            Gesture.instance.y = t1.clientY - (rect.top + window.scrollY);\r\n\r\n\r\n\r\n            Gesture.instance.movX = Gesture.instance.x - Gesture.instance.lastX;\r\n            Gesture.instance.movY = Gesture.instance.y - Gesture.instance.lastY;\r\n\r\n\r\n\r\n            Gesture.instance.lastX = Gesture.instance.x;\r\n            Gesture.instance.lastY = Gesture.instance.y;\r\n\r\n            Gesture.isTouch = true;\r\n        });\r\n\r\n        window.addEventListener('touchend', event => {\r\n            Gesture.instance.movX = 0;\r\n            Gesture.instance.movY = 0;\r\n            Gesture.isTouch = false;\r\n        });\r\n    }\r\n\r\n    clear() {\r\n        Gesture.instance.lastX = 0;\r\n        Gesture.instance.lastY = 0;\r\n\r\n        Gesture.instance.x = 0;\r\n        Gesture.instance.y = 0;\r\n\r\n        Gesture.instance.movX = 0;\r\n        Gesture.instance.movY = 0;\r\n\r\n        Gesture.isTouch = false;\r\n    }\r\n\r\n    isTouch() {\r\n        return Gesture.isTouch;\r\n    }\r\n\r\n    touchX() {\r\n        return Gesture.instance.x;\r\n    }\r\n\r\n    touchY() {\r\n        return Gesture.instance.y;\r\n    }\r\n\r\n    swipX() {\r\n        return Gesture.instance.movX;\r\n    }\r\n\r\n    swipY() {\r\n        return Gesture.instance.movY;\r\n    }\r\n\r\n    scaleVel() {\r\n        \r\n    }\r\n\r\n    setDOMElementReference(elem) {\r\n        Gesture.domRef = elem;\r\n    }\r\n}\r\n\r\nGesture.instance = null;\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/inputs/Gesture.js?");

/***/ }),

/***/ "../../../Akila/inputs/Keyboard.js":
/*!******************************************!*\
  !*** D:/GitHub/Akila/inputs/Keyboard.js ***!
  \******************************************/
/*! exports provided: Keyboard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Keyboard\", function() { return Keyboard; });\nclass Keyboard {\r\n    constructor() {\r\n        if(Keyboard.instance != null) return;\r\n        Keyboard.instance = this;\r\n\r\n        this.pressStates = new Array();\r\n        this.toggleStates = new Array();\r\n\r\n        this.clear();\r\n\r\n        window.onkeydown = event => {\r\n            if (!event.ctrlKey) return;\r\n            switch (event.keyCode) {\r\n                case 83: //Block Ctrl+S\r\n                case 68: //Block Ctrl+D\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    break;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', event => {\r\n            this.pressStates[event.keyCode] = true;\r\n            this.toggleStates[event.keyCode] = !this.toggleStates[event.keyCode];\r\n            return false;\r\n        });\r\n\r\n        window.addEventListener('keyup', event => {\r\n            this.pressStates[event.keyCode] = false;\r\n            return false;\r\n        });\r\n\r\n        window.addEventListener('blur', e => {\r\n            for(let i = 0; i < 256; ++i) {\r\n                Keyboard.instance.pressStates[i] = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    clear() {\r\n        for(let i = 0; i < 256; ++i) {\r\n            Keyboard.instance.pressStates[i] = false;\r\n            Keyboard.instance.toggleStates[i] = false;\r\n        }\r\n    }\r\n\r\n    isPressed(key) {\r\n        return Keyboard.instance.pressStates[key];\r\n    }\r\n\r\n    isToggled(key) {\r\n        return Keyboard.instance.toggleStates[key];\r\n    }\r\n}\r\n\r\nKeyboard.instance = null;\r\n\r\nKeyboard.BACKSPACE = 8;\r\nKeyboard.TAB = 9;\r\nKeyboard.ENTER = 13;\r\nKeyboard.SHIFT = 16;\r\nKeyboard.CTRL = 17;\r\nKeyboard.ALT = 18;\r\nKeyboard.PAUSE = 19;\r\nKeyboard.CAPS_LOCK = 20;\r\nKeyboard.ESCAPE = 27;\r\nKeyboard.SPACE = 32;\r\nKeyboard.PAGE_UP = 33;\r\nKeyboard.PAGE_DOWN = 34;\r\nKeyboard.END = 35;\r\nKeyboard.HOME = 36;\r\nKeyboard.LEFT_ARROW = 37;\r\nKeyboard.UP_ARROW = 38;\r\nKeyboard.RIGHT_ARROW = 39;\r\nKeyboard.DOWN_ARROW = 40;\r\nKeyboard.INSERT = 45;\r\nKeyboard.DELETE = 46;\r\nKeyboard.KEY_0 = 48;\r\nKeyboard.KEY_1 = 49;\r\nKeyboard.KEY_2 = 50;\r\nKeyboard.KEY_3 = 51;\r\nKeyboard.KEY_4 = 52;\r\nKeyboard.KEY_5 = 53;\r\nKeyboard.KEY_6 = 54;\r\nKeyboard.KEY_7 = 55;\r\nKeyboard.KEY_8 = 56;\r\nKeyboard.KEY_9 = 57;\r\nKeyboard.KEY_A = 65;\r\nKeyboard.KEY_B = 66;\r\nKeyboard.KEY_C = 67;\r\nKeyboard.KEY_D = 68;\r\nKeyboard.KEY_E = 69;\r\nKeyboard.KEY_F = 70;\r\nKeyboard.KEY_G = 71;\r\nKeyboard.KEY_H = 72;\r\nKeyboard.KEY_I = 73;\r\nKeyboard.KEY_J = 74;\r\nKeyboard.KEY_K = 75;\r\nKeyboard.KEY_L = 76;\r\nKeyboard.KEY_M = 77;\r\nKeyboard.KEY_N = 78;\r\nKeyboard.KEY_O = 79;\r\nKeyboard.KEY_P = 80;\r\nKeyboard.KEY_Q = 81;\r\nKeyboard.KEY_R = 82;\r\nKeyboard.KEY_S = 83;\r\nKeyboard.KEY_T = 84;\r\nKeyboard.KEY_U = 85;\r\nKeyboard.KEY_V = 86;\r\nKeyboard.KEY_W = 87;\r\nKeyboard.KEY_X = 88;\r\nKeyboard.KEY_Y = 89;\r\nKeyboard.KEY_Z = 90;\r\nKeyboard.LEFT_META = 91;\r\nKeyboard.RIGHT_META = 92;\r\nKeyboard.SELECT = 93;\r\nKeyboard.NUMPAD_0 = 96;\r\nKeyboard.NUMPAD_1 = 97;\r\nKeyboard.NUMPAD_2 = 98;\r\nKeyboard.NUMPAD_3 = 99;\r\nKeyboard.NUMPAD_4 = 100;\r\nKeyboard.NUMPAD_5 = 101;\r\nKeyboard.NUMPAD_6 = 102;\r\nKeyboard.NUMPAD_7 = 103;\r\nKeyboard.NUMPAD_8 = 104;\r\nKeyboard.NUMPAD_9 = 105;\r\nKeyboard.MULTIPLY = 106;\r\nKeyboard.ADD = 107;\r\nKeyboard.SUBTRACT = 109;\r\nKeyboard.DECIMAL = 110;\r\nKeyboard.DIVIDE = 111;\r\nKeyboard.F1 = 112;\r\nKeyboard.F2 = 113;\r\nKeyboard.F3 = 114;\r\nKeyboard.F4 = 115;\r\nKeyboard.F5 = 116;\r\nKeyboard.F6 = 117;\r\nKeyboard.F7 = 118;\r\nKeyboard.F8 = 119;\r\nKeyboard.F9 = 120;\r\nKeyboard.F10 = 121;\r\nKeyboard.F11 = 122;\r\nKeyboard.F12 = 123;\r\nKeyboard.NUM_LOCK = 144;\r\nKeyboard.SCROLL_LOCK = 145;\r\nKeyboard.SEMICOLON = 186;\r\nKeyboard.EQUALS = 187;\r\nKeyboard.COMMA = 188;\r\nKeyboard.DASH = 189;\r\nKeyboard.PERIOD = 190;\r\nKeyboard.FORWARD_SLASH = 191;\r\nKeyboard.GRAVE_ACCENT = 192;\r\nKeyboard.OPEN_BRACKET = 219;\r\nKeyboard.BACK_SLASH = 220;\r\nKeyboard.CLOSE_BRACKET = 221;\r\nKeyboard.SINGLE_QUOTE = 222;\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/inputs/Keyboard.js?");

/***/ }),

/***/ "../../../Akila/inputs/Mouse.js":
/*!***************************************!*\
  !*** D:/GitHub/Akila/inputs/Mouse.js ***!
  \***************************************/
/*! exports provided: Mouse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Mouse\", function() { return Mouse; });\n/* harmony import */ var _time_Time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../time/Time */ \"../../../Akila/time/Time.js\");\n/* harmony import */ var _webgl_Display__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../webgl/Display */ \"../../../Akila/webgl/Display.js\");\n\r\n\r\n\r\nclass Mouse {\r\n    constructor() {\r\n        if(Mouse.instance != null) return;\r\n        Mouse.instance = this;\r\n        _time_Time__WEBPACK_IMPORTED_MODULE_0__[\"Time\"].mouse = this.update;\r\n\r\n        this.pressStates = new Array();\r\n        this.toggleStates = new Array();\r\n\r\n        this.x = 0;\r\n        this.y = 0;\r\n\r\n        this.update();\r\n\r\n        if(_webgl_Display__WEBPACK_IMPORTED_MODULE_1__[\"Display\"].ctx) this.setDOMElementReference(_webgl_Display__WEBPACK_IMPORTED_MODULE_1__[\"Display\"].ctx.canvas);\r\n        else this.setDOMElementReference({\r\n            getBoundingClientRect: () => {\r\n                return {left: 0, top: 0};\r\n            } \r\n        });\r\n\r\n        this.clear();\r\n\r\n        window.addEventListener('mousedown', event => {\r\n            event.preventDefault();\r\n            this.pressStates[event.button] = true;\r\n            this.toggleStates[event.button] = !this.toggleStates[event.button];\r\n        });\r\n\r\n        window.addEventListener('mouseup', event => {\r\n            this.pressStates[event.button] = false;\r\n        });\r\n\r\n        window.addEventListener('contextmenu', event => {\r\n            event.preventDefault();\r\n            return false;\r\n        });\r\n\r\n        window.addEventListener('mousemove', event => {\r\n            const rect = Mouse.domRef.getBoundingClientRect();\r\n            Mouse.instance.x = event.clientX - (rect.left + window.scrollX);\r\n            Mouse.instance.y = event.clientY - (rect.top + window.scrollY);\r\n\r\n            Mouse.instance.movX += event.movementX;\r\n            Mouse.instance.movY += event.movementY;\r\n        });\r\n\r\n        window.addEventListener('wheel', event => {\r\n            Mouse.instance.mouseScrollVelX = event.deltaX > 0 ? 1 : -1;\r\n            Mouse.instance.mouseScrollVelY = event.deltaY > 0 ? 1 : -1;\r\n\r\n            return false;\r\n        });\r\n    }\r\n\r\n\r\n\r\n    clear() {\r\n        for(let i = 0; i < 4; ++i) {\r\n            Mouse.instance.pressStates[i] = false;\r\n            Mouse.instance.toggleStates[i] = false;\r\n        }\r\n    }\r\n\r\n    update() {\r\n        Mouse.instance.mouseScrollVelX = 0;\r\n        Mouse.instance.mouseScrollVelY = 0;\r\n\r\n        Mouse.instance.movX = 0;\r\n        Mouse.instance.movY = 0;\r\n    }\r\n\r\n    isPressed(button) {\r\n        return Mouse.instance.pressStates[button];\r\n    }\r\n\r\n    isToggled(button) {\r\n        return Mouse.instance.toggleStates[button];\r\n    }\r\n\r\n    posX() {\r\n        return Mouse.instance.x;\r\n    }\r\n\r\n    posY() {\r\n        return Mouse.instance.y;\r\n    }\r\n\r\n    velX() {\r\n        return Mouse.instance.movX;\r\n    }\r\n\r\n    velY() {\r\n        return Mouse.instance.movY;\r\n    }\r\n\r\n    scrollVelX() {      \r\n        return Mouse.instance.mouseScrollVelX;\r\n    }\r\n\r\n    scrollVelY() {\r\n        return Mouse.instance.mouseScrollVelY;\r\n    }\r\n\r\n    setDOMElementReference(elem) {\r\n        Mouse.domRef = elem;\r\n    }\r\n}\r\n\r\nMouse.instance = null;\r\n\r\nMouse.LEFT_BUTTON = 0;\r\nMouse.WHEEL_BUTTON = 1;\r\nMouse.RIGHT_BUTTON = 2;\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/inputs/Mouse.js?");

/***/ }),

/***/ "../../../Akila/time.js":
/*!*******************************!*\
  !*** D:/GitHub/Akila/time.js ***!
  \*******************************/
/*! exports provided: Time, Key, Timeline, StateTimeline, Clock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _time_Time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./time/Time */ \"../../../Akila/time/Time.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Time\", function() { return _time_Time__WEBPACK_IMPORTED_MODULE_0__[\"Time\"]; });\n\n/* harmony import */ var _time_Timeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./time/Timeline */ \"../../../Akila/time/Timeline.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Key\", function() { return _time_Timeline__WEBPACK_IMPORTED_MODULE_1__[\"Key\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Timeline\", function() { return _time_Timeline__WEBPACK_IMPORTED_MODULE_1__[\"Timeline\"]; });\n\n/* harmony import */ var _time_StateTimeline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./time/StateTimeline */ \"../../../Akila/time/StateTimeline.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"StateTimeline\", function() { return _time_StateTimeline__WEBPACK_IMPORTED_MODULE_2__[\"StateTimeline\"]; });\n\n/* harmony import */ var _time_Clock__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./time/Clock */ \"../../../Akila/time/Clock.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Clock\", function() { return _time_Clock__WEBPACK_IMPORTED_MODULE_3__[\"Clock\"]; });\n\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/time.js?");

/***/ }),

/***/ "../../../Akila/time/Clock.js":
/*!*************************************!*\
  !*** D:/GitHub/Akila/time/Clock.js ***!
  \*************************************/
/*! exports provided: Clock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Clock\", function() { return Clock; });\n/* harmony import */ var _Time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Time */ \"../../../Akila/time/Time.js\");\n\r\n\r\nclass ClockNoLoopState {\r\n    static calculate(clock) {\r\n        clock.currentTime += _Time__WEBPACK_IMPORTED_MODULE_0__[\"Time\"].delta * clock.delta;\r\n        if(clock.currentTime >= clock.end) clock.currentTime = clock.end;\r\n    }\r\n}\r\n\r\nclass ClockLoopState {\r\n    static calculate(clock) {\r\n        clock.currentTime += _Time__WEBPACK_IMPORTED_MODULE_0__[\"Time\"].delta * clock.delta;\r\n        while(clock.currentTime >= clock.end) clock.currentTime -= clock.diff;\r\n    }\r\n}\r\n\r\nclass Clock {\r\n    constructor(start = 0, end = 10, delta = 1) {\r\n        this.start = start;\r\n        this.end = end;\r\n        this.delta = delta;\r\n        this.diff = end - start;\r\n\r\n        this.setLoop(true);\r\n        this.reset();\r\n    }\r\n\r\n    setLoop(loop) {\r\n        if(loop) this.state = ClockLoopState;\r\n        else this.state = ClockNoLoopState;\r\n    }\r\n\r\n    next() {\r\n        this.state.calculate(this);\r\n        this.tic = Math.floor(this.currentTime);\r\n    }\r\n\r\n    getValue() {\r\n        return this.tic;\r\n    }\r\n\r\n    isFirst() {\r\n        return this.currentTime == this.start;\r\n    }\r\n\r\n    reset() {\r\n        this.currentTime = this.start;\r\n        this.tic = this.start;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/time/Clock.js?");

/***/ }),

/***/ "../../../Akila/time/StateTimeline.js":
/*!*********************************************!*\
  !*** D:/GitHub/Akila/time/StateTimeline.js ***!
  \*********************************************/
/*! exports provided: StateTimeline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StateTimeline\", function() { return StateTimeline; });\nclass StateTimelineNoLoopState {\r\n    static calculateIndex(tl) {\r\n        tl.currentIndex = Math.min(tl.currentIndex + 1, tl.states.length - 1);\r\n    }\r\n}\r\n\r\nclass StateTimelineLoopState {\r\n    static calculateIndex(tl) {\r\n        ++tl.currentIndex;\r\n        if(tl.currentIndex >= tl.states.length) tl.currentIndex = 0;\r\n    }\r\n}\r\n\r\nclass StateTimeline {\r\n    constructor() {\r\n        this.states = new Array();\r\n        this.buffer = new Object();\r\n        this.setLoop(false);\r\n        this.reset();\r\n    }\r\n\r\n    addState(obj) {\r\n        if(this.states.length == 0) this.buffer = obj;\r\n        this.states.push(obj);\r\n        return this;\r\n    }\r\n\r\n    setLoop(loop) {\r\n        if(loop) this.state = StateTimelineLoopState;\r\n        else this.state = StateTimelineNoLoopState;\r\n        return this;\r\n    }\r\n\r\n    next() {\r\n        this.state.calculateIndex(this);\r\n        this.buffer = this.states[this.currentIndex];\r\n    }\r\n\r\n    reset() {\r\n        this.currentIndex = 0;\r\n    }\r\n\r\n    getData() {\r\n        return this.buffer;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/time/StateTimeline.js?");

/***/ }),

/***/ "../../../Akila/time/Time.js":
/*!************************************!*\
  !*** D:/GitHub/Akila/time/Time.js ***!
  \************************************/
/*! exports provided: Time */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Time\", function() { return Time; });\nclass Time {\r\n    constructor() {\r\n        if(Time.instance) return;\r\n        Time.instance = this;\r\n\r\n        this.onInit(() => {});\r\n        this.onTick(() => {});\r\n        this.onDraw(() => {});\r\n\r\n        Time.mouse = () => {};\r\n        Time.gamepad = () => {};\r\n\r\n        Time.run = false;\r\n        Time.tickStart = 0;\r\n        Time.drawStart = 0;\r\n\r\n        this.setDeltaLimite(1 / 15);\r\n    }\r\n\r\n    onInit(callBack) {\r\n        Time.init = callBack;\r\n    }\r\n\r\n    onTick(callack) {\r\n        Time.tickCallback = () => {\r\n            callack();\r\n            Time.tick = Time.now - Time.tickStart;\r\n        }\r\n    }\r\n\r\n    onDraw(callack) {\r\n        Time.drawCallback = () => {\r\n            callack();\r\n            Time.draw = Time.now - Time.drawStart;\r\n        }\r\n    }\r\n\r\n    async start() {\r\n        if(Time.run) return;\r\n\r\n        await Time.init();\r\n\r\n        Time.run = true;\r\n\r\n        const cb = (iNow) => {\r\n            Time.now = iNow / 1e3;\r\n            Time.delta = (Time.now - Time.lastTime) * Time.scale;\r\n            Time.limitedDelta = Time.delta > Time.maxDelta ? Time.maxDelta : Time.delta;\r\n            Time.fps = Math.floor(1 / Time.delta * 100) / 100;\r\n            Time.lastTime = Time.now;\r\n\r\n            Time.gamepad();\r\n\r\n            Time.tickFunc();\r\n            Time.drawFunc();\r\n\r\n            Time.mouse();\r\n\r\n            requestAnimationFrame(cb);\r\n        }\r\n\r\n        requestAnimationFrame((iNow) => {\r\n            Time.lastTime = iNow / 1e3;\r\n\r\n            Time.now = Time.lastTime;\r\n            this.play();\r\n\r\n            requestAnimationFrame(cb);\r\n        });\r\n    }\r\n\r\n    setScale(scale) {\r\n        Time.scale = scale;\r\n    }\r\n\r\n    setDeltaLimite(limite) {\r\n        Time.maxDelta = limite;\r\n    }\r\n\r\n    pause() {\r\n        this.pauseTick();\r\n        this.pauseDraw();\r\n    }\r\n\r\n    play() {\r\n        this.playTick();\r\n        this.playDraw();\r\n    }\r\n\r\n    pauseTick() {\r\n        Time.tickFunc = () => {};\r\n    }\r\n\r\n    playTick() {\r\n        Time.tickFunc = Time.tickCallback;\r\n        Time.tickStart = Time.now - Time.tick;\r\n    }\r\n\r\n    pauseDraw() {\r\n        Time.drawFunc = () => {};\r\n    }\r\n\r\n    playDraw() {\r\n        Time.drawFunc = Time.drawCallback;\r\n        Time.drawStart = Time.now - Time.draw;\r\n    }\r\n}\r\n\r\nTime.delta = 0;\r\nTime.limitedDelta = 0;\r\nTime.lastTime = 0;\r\nTime.scale = 1;\r\nTime.fps = 0;\r\nTime.now = 0;\r\nTime.tick = 0;\r\nTime.draw = 0;\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/time/Time.js?");

/***/ }),

/***/ "../../../Akila/time/Timeline.js":
/*!****************************************!*\
  !*** D:/GitHub/Akila/time/Timeline.js ***!
  \****************************************/
/*! exports provided: Key, Timeline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Key\", function() { return Key; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Timeline\", function() { return Timeline; });\n/* harmony import */ var _Time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Time */ \"../../../Akila/time/Time.js\");\n\r\n\r\nclass KeyLinearState {\r\n    static calculate(buffer, indexDelimiter, key1, key2, delta) {\r\n        const data1 = key1.getData();\r\n        const data2 = key2.getData();\r\n\r\n        for(let i = 0; i < indexDelimiter; ++i) buffer[i] = TimelineUtils.bezier1(data1[i], data2[i], delta);\r\n        for(let i = indexDelimiter; i < data1.length; ++i) buffer[i] = data1[i];\r\n    }\r\n}\r\n\r\n\r\nclass KeyQuadraticBezierState {\r\n    static calculate(buffer, indexDelimiter, key1, key2, delta) {\r\n        const data1 = key1.getData();\r\n        const data2 = key2.getData();\r\n\r\n        const dataControl1 = key1.getController1();\r\n              \r\n        for(let i = 0; i < indexDelimiter; ++i) buffer[i] = TimelineUtils.bezier2(data1[i], dataControl1[i], data2[i], delta);\r\n        for(let i = indexDelimiter; i < data1.length; ++i) buffer[i] = data1[i];\r\n    }\r\n}\r\n\r\nclass KeyCubicBezierState {\r\n    static calculate(buffer, indexDelimiter, key1, key2, delta) {\r\n        const data1 = key1.getData();\r\n        const data2 = key2.getData();\r\n\r\n        const dataControl1 = key1.getController1();\r\n        const dataControl2 = key1.getController2();\r\n\r\n        for(let i = 0; i < indexDelimiter; ++i) buffer[i] = TimelineUtils.bezier3(data1[i], dataControl1[i], dataControl2[i], data2[i], delta);\r\n        for(let i = indexDelimiter; i < data1.length; ++i) buffer[i] = data1[i];\r\n    }\r\n}\r\n\r\nclass Key {\r\n    constructor(data, time) {\r\n        this.setData(data);\r\n        this.time = time;\r\n        this.state = KeyLinearState;\r\n    }\r\n\r\n    getTime() {\r\n        return this.time;\r\n    }\r\n\r\n    setData(data) {\r\n        this.data = data;\r\n        return this;\r\n    }\r\n\r\n    setController1(data) {\r\n        this.controller1 = data;\r\n        if(this.state == KeyLinearState) this.state = KeyQuadraticBezierState;\r\n        return this;\r\n    }\r\n\r\n    getController1() {\r\n        return this.controller1;\r\n    }\r\n\r\n    setController2(data) {\r\n        this.controller2 = data;\r\n        if(this.state != KeyCubicBezierState) this.state = KeyCubicBezierState;\r\n        return this;\r\n    }\r\n\r\n    getController2() {\r\n        return this.controller2;\r\n    }\r\n\r\n    getData() {\r\n        return this.data;\r\n    }\r\n}\r\n\r\n\r\nclass TimelineUtils {\r\n    static bezier1(p0, p1, t) {\r\n        return p0 * (1 - t) + p1 * t;\r\n    }\r\n\r\n    static bezier2(p0, p1, p2, t) {\r\n        const mt = 1 - t;\r\n        return p0 * (mt * mt) + 2 * p1 * t * mt + p2 * (t * t);\r\n    }\r\n\r\n    static bezier3(p0, p1, p2, p3, t) {\r\n        const t1 = 1 - t;\r\n        return p0 * (t1 * t1 * t1) + 3 * p1 * t * (t1 * t1) + 3 * p2 *(t * t) * t1 + p3 * (t * t * t);\r\n    }\r\n}\r\n\r\nclass TimelineNoLoopState {\r\n    static calculateIndex(tl) {\r\n        const indexMax = tl.keys.length - 2;\r\n        while (tl.keys[tl.currentIndex + 1].getTime() < tl.currentTime) {\r\n            if(tl.currentIndex < indexMax) {\r\n                ++tl.currentIndex;\r\n            } else {\r\n                tl.currentTime = tl.keys[tl.currentIndex + 1].getTime();\r\n                tl.currentIndex = indexMax;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass TimelineLoopState {\r\n    static calculateIndex(tl) {\r\n        while(tl.keys[tl.currentIndex + 1].getTime() < tl.currentTime) {\r\n            if(tl.currentIndex < (tl.keys.length - 2)) {\r\n                ++tl.currentIndex;\r\n            } else {\r\n                tl.currentTime -= tl.keys[tl.currentIndex + 1].getTime();\r\n                tl.currentIndex = 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Timeline {\r\n    constructor(interpolateIndexDelimiter = -1) {\r\n        this.keys = new Array();\r\n        this.buffer = new Array();\r\n        this.indexDelimiter = interpolateIndexDelimiter;\r\n        this.setLoop(false);\r\n        this.reset();\r\n    }\r\n\r\n    addKey(key) {\r\n        if(this.keys.length == 0) {\r\n            const data = key.getData();\r\n\r\n            if(data instanceof Float32Array) this.buffer = new Float32Array(data.length);\r\n            else if(data instanceof Float64Array) this.buffer = new Float64Array(data.length);\r\n            else if(data instanceof Int8Array) this.buffer = new Int8Array(data.length);\r\n            else if(data instanceof Int16Array) this.buffer = new Int16Array(data.length);\r\n            else if(data instanceof Int32Array) this.buffer = new Int32Array(data.length);\r\n            else this.buffer = new Array(data.length);\r\n\r\n            if(this.indexDelimiter == -1) this.indexDelimiter = data.length;\r\n            for(let i = 0; i < data.length; ++i) this.buffer[i] = data[i];\r\n        }\r\n        \r\n        this.keys.push(key);\r\n        return this;\r\n    }\r\n\r\n    setLoop(loop) {\r\n        if(loop) this.state = TimelineLoopState;\r\n        else this.state = TimelineNoLoopState;\r\n        return this;\r\n    }\r\n\r\n    next() {\r\n        this.state.calculateIndex(this);\r\n\r\n        const key1 = this.keys[this.currentIndex];\r\n        const key2 = this.keys[this.currentIndex + 1];\r\n        const delta = (this.currentTime - key1.getTime()) / (key2.getTime() - key1.getTime());\r\n\r\n        key1.state.calculate(this.buffer, this.indexDelimiter, key1, key2, delta);\r\n\r\n        this.currentTime += _Time__WEBPACK_IMPORTED_MODULE_0__[\"Time\"].delta;\r\n    }\r\n\r\n    getData() {\r\n        return this.buffer;\r\n    }\r\n\r\n    reset() {\r\n        this.currentTime = 0;\r\n        this.currentIndex = 0;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/time/Timeline.js?");

/***/ }),

/***/ "../../../Akila/utils.js":
/*!********************************!*\
  !*** D:/GitHub/Akila/utils.js ***!
  \********************************/
/*! exports provided: Matrix4, Matrix3, Vector2, Vector3, Parser, Bank, Camera, FirstPersonCamera, TrackBallCamera, LinkedList, LinkedStructure, Color */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_Matrix4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/Matrix4 */ \"../../../Akila/utils/Matrix4.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Matrix4\", function() { return _utils_Matrix4__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"]; });\n\n/* harmony import */ var _utils_Matrix3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/Matrix3 */ \"../../../Akila/utils/Matrix3.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Matrix3\", function() { return _utils_Matrix3__WEBPACK_IMPORTED_MODULE_1__[\"Matrix3\"]; });\n\n/* harmony import */ var _utils_Vector2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/Vector2 */ \"../../../Akila/utils/Vector2.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Vector2\", function() { return _utils_Vector2__WEBPACK_IMPORTED_MODULE_2__[\"Vector2\"]; });\n\n/* harmony import */ var _utils_Vector3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/Vector3 */ \"../../../Akila/utils/Vector3.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Vector3\", function() { return _utils_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"Vector3\"]; });\n\n/* harmony import */ var _utils_Parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/Parser */ \"../../../Akila/utils/Parser.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Parser\", function() { return _utils_Parser__WEBPACK_IMPORTED_MODULE_4__[\"Parser\"]; });\n\n/* harmony import */ var _utils_Bank__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/Bank */ \"../../../Akila/utils/Bank.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Bank\", function() { return _utils_Bank__WEBPACK_IMPORTED_MODULE_5__[\"Bank\"]; });\n\n/* harmony import */ var _utils_Camera__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/Camera */ \"../../../Akila/utils/Camera.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Camera\", function() { return _utils_Camera__WEBPACK_IMPORTED_MODULE_6__[\"Camera\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FirstPersonCamera\", function() { return _utils_Camera__WEBPACK_IMPORTED_MODULE_6__[\"FirstPersonCamera\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TrackBallCamera\", function() { return _utils_Camera__WEBPACK_IMPORTED_MODULE_6__[\"TrackBallCamera\"]; });\n\n/* harmony import */ var _utils_LinkedStructure__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/LinkedStructure */ \"../../../Akila/utils/LinkedStructure.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LinkedList\", function() { return _utils_LinkedStructure__WEBPACK_IMPORTED_MODULE_7__[\"LinkedList\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LinkedStructure\", function() { return _utils_LinkedStructure__WEBPACK_IMPORTED_MODULE_7__[\"LinkedStructure\"]; });\n\n/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/Color */ \"../../../Akila/utils/Color.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Color\", function() { return _utils_Color__WEBPACK_IMPORTED_MODULE_8__[\"Color\"]; });\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/utils.js?");

/***/ }),

/***/ "../../../Akila/utils/Bank.js":
/*!*************************************!*\
  !*** D:/GitHub/Akila/utils/Bank.js ***!
  \*************************************/
/*! exports provided: Bank */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Bank\", function() { return Bank; });\nclass Bank {\r\n  constructor(repertoire, listeNomFichiers, options){\r\n    this.setDirectory(repertoire);\r\n    this.setFileList(listeNomFichiers);\r\n    this.setOptions(options);\r\n  }\r\n\r\n  setDirectory(rep = \"./\"){\r\n    this.rep = rep;\r\n    return this;\r\n  }\r\n\r\n  setFileList(listeNomFichiers = []){\r\n    this.noms = listeNomFichiers.map(str => str.trim());\r\n    return this;\r\n  }\r\n\r\n  setOptions(options = {}){\r\n    this.extension = options.extension ? `.${options.extension}` : \"\";\r\n    this.mediaType = options.mediaType || \"text\";\r\n    this.treatment = options.treatment || null;\r\n    this.default = options.default || undefined;\r\n    return this;\r\n  }\r\n\r\n  initForLoad(){\r\n    if(this.mediaType === \"image\") this.mediaType = \"img\";\r\n\r\n    if(this.mediaType === \"img\" ||\r\n       this.mediaType === \"video\" ||\r\n       this.mediaType === \"audio\")\r\n       this.requeteMode = \"media\";\r\n    //else if(this.mediaType === \"font\") this.requeteMode = \"font\";\r\n    else this.requeteMode = \"file\";\r\n\r\n    if(this.mediaType !== \"arrayBuffer\" &&\r\n       this.mediaType !== \"blob\" &&\r\n       this.mediaType !== \"formData\" &&\r\n       this.mediaType !== \"json\" &&\r\n       //this.mediaType !== \"font\" &&\r\n       this.mediaType === \"text\"\r\n     ) this.mediaType = \"text\";\r\n\r\n    this.fichiers = new Object();\r\n  }\r\n\r\n  async loadMedia(nom){\r\n    return new Promise((resolve, reject) => {\r\n      const elem = document.createElement(this.mediaType);\r\n      if(this.mediaType == \"img\") elem.onload = () => {resolve(elem);};\r\n      else elem.onloadedmetadata = () => {resolve(elem);};\r\n      elem.onerror = () => { reject(); }\r\n      elem.src = `${this.rep}/${nom}${this.extension}`;\r\n    });\r\n  }\r\n\r\n  /*async loadFont(nom){\r\n    const font = new FontFace(nom, `${this.rep}/${nom}${this.extension}`);\r\n    return font.load()\r\n    .then(() => {\r\n      return font;\r\n    });\r\n  }*/\r\n\r\n  async loadFile(nom){\r\n    return fetch(`${this.rep}/${nom}${this.extension}`)\r\n    .then(data => {\r\n      if(data.ok) return data[this.mediaType]();\r\n      else return Promise.reject();\r\n    })\r\n  }\r\n\r\n  async load(stateEvent, endMessage = \"\"){\r\n    this.initForLoad();\r\n    if(typeof stateEvent !== \"function\") stateEvent = (p) => {};\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n      if(this.noms.length == 0) {\r\n        stateEvent(100, endMessage);\r\n        resolve();\r\n      } else {\r\n        let nbTotalFichier = this.noms.length;\r\n\r\n        let requete;\r\n        if(this.requeteMode === \"media\") requete = this.loadMedia.bind(this);\r\n        //else if(this.requeteMode === \"font\") requete = this.loadFont.bind(this);\r\n        else requete = this.loadFile.bind(this);\r\n\r\n        for (const nom of this.noms) {\r\n          stateEvent(Math.floor((this.noms.length - nbTotalFichier) / this.noms.length * 100), nom);\r\n\r\n          await requete(nom)\r\n          .then(async file => {\r\n            if(typeof this.treatment === \"function\") this.fichiers[nom] = await this.treatment(file, nom);\r\n            else this.fichiers[nom] = file;\r\n            --nbTotalFichier;\r\n          })\r\n          .catch(e => {\r\n            console.warn(`Impossible de charger le fichier '${this.rep}/${nom}${this.extension}'\\n${e}`);\r\n          });\r\n        }\r\n\r\n        stateEvent(100, endMessage);\r\n\r\n        resolve();\r\n      }\r\n    })\r\n  }\r\n\r\n  get(nom){\r\n    const f = this.fichiers[nom];\r\n    if (!f) return this.fichiers[this.default];\r\n    return f;\r\n  }\r\n\r\n  getAll(){\r\n    return this.fichiers;\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/utils/Bank.js?");

/***/ }),

/***/ "../../../Akila/utils/Camera.js":
/*!***************************************!*\
  !*** D:/GitHub/Akila/utils/Camera.js ***!
  \***************************************/
/*! exports provided: Camera, FirstPersonCamera, TrackBallCamera */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Camera\", function() { return Camera; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FirstPersonCamera\", function() { return FirstPersonCamera; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TrackBallCamera\", function() { return TrackBallCamera; });\n/* harmony import */ var _Matrix4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Matrix4 */ \"../../../Akila/utils/Matrix4.js\");\n/* harmony import */ var _inputs_Keyboard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../inputs/Keyboard */ \"../../../Akila/inputs/Keyboard.js\");\n/* harmony import */ var _inputs_Mouse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../inputs/Mouse */ \"../../../Akila/inputs/Mouse.js\");\n/* harmony import */ var _inputs_Gamepad__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../inputs/Gamepad */ \"../../../Akila/inputs/Gamepad.js\");\n/* harmony import */ var _inputs_Gesture__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../inputs/Gesture */ \"../../../Akila/inputs/Gesture.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass Camera {\r\n    constructor(width, height) {\r\n        this.position = new Float32Array([0, 0, 0]);\r\n        this.up = new Float32Array([0, 1, 0]);\r\n        this.forward = new Float32Array([0, 0, 1]);\r\n\r\n        this.camera = _Matrix4__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"].identity(new Float32Array(16));\r\n        this.projection = _Matrix4__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"].perspective(_Matrix4__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"].identity(new Float32Array(16)), 1.0472, width / height, 0.001, 1.0);\r\n    \r\n        this.buffer = _Matrix4__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"].identity(new Float32Array(16));\r\n    }\r\n\r\n    getPosition() {\r\n        return this.position;\r\n    }\r\n\r\n    getUp() {\r\n        return this.up;\r\n    }\r\n\r\n    getForward() {\r\n        return this.forward;\r\n    }\r\n\r\n    update() {\r\n        _Matrix4__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"].lookAt(this.camera, this.position, this.forward, this.up);\r\n    }\r\n\r\n    getProjectionMatrix() {\r\n        return this.projection;\r\n    }\r\n\r\n    getCameraMatrix() {\r\n        return this.camera;\r\n    }\r\n\r\n    getVPMatrix() {\r\n        return _Matrix4__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"].multiply(this.buffer, this.projection, this.camera);\r\n    }\r\n}\r\n\r\nCamera.DEMIPI = Math.PI / 2.0;\r\n\r\n\r\nclass FirstPersonCamera extends Camera {\r\n    constructor(width, height) {\r\n        super(width, height);\r\n\r\n        this.mouse = new _inputs_Mouse__WEBPACK_IMPORTED_MODULE_2__[\"Mouse\"]();\r\n        this.keyboard = new _inputs_Keyboard__WEBPACK_IMPORTED_MODULE_1__[\"Keyboard\"]();\r\n        this.gamepad = new _inputs_Gamepad__WEBPACK_IMPORTED_MODULE_3__[\"Gamepad\"]();\r\n\r\n        this.angle = new Float32Array([0, Camera.DEMIPI, 0]);\r\n\r\n        this.speed = 0.4\r\n        this.mouseSensibility = 0.004;\r\n        this.gamepadSensibility = 0.06;\r\n\r\n        const canvas = document.getElementById('webgl-canvas');\r\n        canvas.addEventListener('click', () => {\r\n            if(!document.pointerLockElement) canvas.requestPointerLock();\r\n        });\r\n    }\r\n\r\n    setPosition(position) {\r\n        this.position[0] = position[0];\r\n        this.position[1] = position[1];\r\n        this.position[2] = position[2];\r\n\r\n        return this;\r\n    }\r\n\r\n    setAngle(angle) {\r\n        this.angle[0] = angle[0];\r\n        this.angle[1] = angle[1];\r\n        this.angle[2] = angle[2];\r\n\r\n        return this;\r\n    }\r\n\r\n    setMouseSensibility(val) {\r\n        this.mouseSensibility = val;\r\n        return this;\r\n    }\r\n\r\n    setGamepadSensibility(val) {\r\n        this.gamepadSensibility = val;\r\n        return this;\r\n    }\r\n\r\n    getAngle() {\r\n        return this.angle;\r\n    }\r\n\r\n    update() {\r\n        if (!!document.pointerLockElement){\r\n            this.movX = -this.mouse.velX() * this.mouseSensibility;\r\n            this.movY = this.mouse.velY() * this.mouseSensibility;\r\n        } else {\r\n            /*this.movX = 0;\r\n            this.movY = 0;*/\r\n            this.movX = -this.gamepad.getStickBX() * this.gamepadSensibility;\r\n            this.movY = this.gamepad.getStickBY() * this.gamepadSensibility;\r\n        }\r\n        \r\n\r\n        let angle = Math.atan2(this.movX, this.movY);\r\n        let dist = Math.sqrt(Math.pow(this.movX, 2) + Math.pow(this.movY, 2));\r\n    \r\n        this.angle[0] -= Math.cos(angle) * dist;\r\n        this.angle[1] -= Math.sin(angle) * dist;\r\n\r\n        if (this.angle[0] > Camera.DEMIPI) this.angle[0] = Camera.DEMIPI;\r\n        else if (this.angle[0] < -Camera.DEMIPI) this.angle[0] = -Camera.DEMIPI;\r\n\r\n\r\n        const cax = Math.cos(this.angle[0]);\r\n        const cay = Math.cos(this.angle[1]);\r\n        const say = Math.sin(this.angle[1]);\r\n\r\n        this.forward[0] = cay * cax;\r\n        this.forward[1] = Math.sin(this.angle[0]);\r\n        this.forward[2] = say * cax;\r\n\r\n\r\n        const angle2 = this.angle[0] + Camera.DEMIPI;\r\n        const cangle2 = Math.cos(angle2);\r\n        this.up[0] = cay * cangle2;\r\n        this.up[1] = Math.sin(angle2);\r\n        this.up[2] = say * cangle2;\r\n\r\n\r\n\r\n        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        if(this.keyboard.isPressed(_inputs_Keyboard__WEBPACK_IMPORTED_MODULE_1__[\"Keyboard\"].KEY_Z)) {\r\n            this.position[0] += this.forward[0] * this.speed;\r\n            this.position[1] += this.forward[1] * this.speed;\r\n            this.position[2] += this.forward[2] * this.speed;\r\n        } else {\r\n            let upDir = 0;\r\n\r\n            if(this.gamepad.getStickAY() > 0) upDir = 1;\r\n            else if(this.gamepad.getStickAY() < 0) upDir = -1;\r\n\r\n            this.position[0] -= this.forward[0] * this.speed * this.gamepad.getStickAY();\r\n            this.position[1] -= this.forward[1] * this.speed * upDir;\r\n            this.position[2] -= this.forward[2] * this.speed * this.gamepad.getStickAY();\r\n        }\r\n\r\n        if(this.keyboard.isPressed(_inputs_Keyboard__WEBPACK_IMPORTED_MODULE_1__[\"Keyboard\"].KEY_S)) {\r\n            this.position[0] -= this.forward[0] * this.speed;\r\n            this.position[1] -= this.forward[1] * this.speed;\r\n            this.position[2] -= this.forward[2] * this.speed;\r\n        }\r\n\r\n        if(this.keyboard.isPressed(_inputs_Keyboard__WEBPACK_IMPORTED_MODULE_1__[\"Keyboard\"].KEY_Q)) {\r\n            this.position[2] -= this.forward[0] * this.speed;\r\n            //this.position[1] += this.forward[1] * this.speed;\r\n            this.position[0] += this.forward[2] * this.speed;\r\n        } else {\r\n            this.position[2] += this.forward[0] * this.speed * this.gamepad.getStickAX();\r\n            //this.position[1] += this.forward[1] * this.speed;\r\n            this.position[0] -= this.forward[2] * this.speed * this.gamepad.getStickAX();\r\n        }\r\n\r\n\r\n        if(this.keyboard.isPressed(_inputs_Keyboard__WEBPACK_IMPORTED_MODULE_1__[\"Keyboard\"].KEY_D)) {\r\n            this.position[2] += this.forward[0] * this.speed;\r\n            //this.position[1] += this.forward[1] * this.speed;\r\n            this.position[0] -= this.forward[2] * this.speed;\r\n        }\r\n\r\n\r\n\r\n        if(this.keyboard.isPressed(_inputs_Keyboard__WEBPACK_IMPORTED_MODULE_1__[\"Keyboard\"].SPACE)) this.position[1] += this.speed;\r\n        else this.position[1] += this.speed * this.gamepad.getButton(_inputs_Gamepad__WEBPACK_IMPORTED_MODULE_3__[\"Gamepad\"].RIGHT_TRIGGER);\r\n        if(this.keyboard.isPressed(_inputs_Keyboard__WEBPACK_IMPORTED_MODULE_1__[\"Keyboard\"].CTRL)) this.position[1] -= this.speed;\r\n        else this.position[1] -= this.speed * this.gamepad.getButton(_inputs_Gamepad__WEBPACK_IMPORTED_MODULE_3__[\"Gamepad\"].LEFT_TRIGGER);\r\n        \r\n\r\n        ////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        const posBuffer = new Float32Array(3);\r\n        const fBuffer = new Float32Array(3);\r\n\r\n        posBuffer[0] = this.forward[0] + this.position[0];\r\n        posBuffer[1] = this.forward[1] + this.position[1];\r\n        posBuffer[2] = this.forward[2] + this.position[2];\r\n\r\n        fBuffer[0] = this.forward[0] + posBuffer[0];\r\n        fBuffer[1] = this.forward[1] + posBuffer[1];\r\n        fBuffer[2] = this.forward[2] + posBuffer[2];\r\n\r\n        _Matrix4__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"].lookAt(this.camera, posBuffer, fBuffer, this.up);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass TrackBallCamera extends Camera {\r\n    constructor(width, height) {\r\n        super(width, height);\r\n\r\n\r\n\r\n        this.gesture = new _inputs_Gesture__WEBPACK_IMPORTED_MODULE_4__[\"Gesture\"]();\r\n\r\n        this.gamepad = new _inputs_Gamepad__WEBPACK_IMPORTED_MODULE_3__[\"Gamepad\"]();\r\n\r\n\r\n        this.mouse = new _inputs_Mouse__WEBPACK_IMPORTED_MODULE_2__[\"Mouse\"]();\r\n\r\n        this.angle = new Float32Array([0, Camera.DEMIPI, 0]);\r\n        this.center = new Float32Array([0, 0, 0]);\r\n\r\n        this.mouseSensibility = 0.004;\r\n        this.scrollSpeed = 1.2;\r\n        this.distance = 1;\r\n    }\r\n\r\n    setMouseSensibility(val) {\r\n        this.mouseSensibility = val;\r\n        return this;\r\n    }\r\n\r\n    setAngle(angle) {\r\n        this.angle[0] = angle[0];\r\n        this.angle[1] = angle[1];\r\n        this.angle[2] = angle[2];\r\n\r\n        return this;\r\n    }\r\n\r\n    getAngle() {\r\n        return this.angle;\r\n    }\r\n\r\n    setCenter(center) {\r\n        this.center[0] = center[0];\r\n        this.center[1] = center[1];\r\n        this.center[2] = center[2];\r\n\r\n        return this;\r\n    }\r\n\r\n    getCenter() {\r\n        return this.center;\r\n    }\r\n\r\n    setDistance(distance) {\r\n        this.distance = distance;\r\n\r\n        return this;\r\n    }\r\n\r\n    getDistance() {\r\n        return this.distance;\r\n    }\r\n\r\n    update() {\r\n        let movX = 0;\r\n        let movY = 0;\r\n\r\n        if(this.mouse.isPressed(_inputs_Mouse__WEBPACK_IMPORTED_MODULE_2__[\"Mouse\"].LEFT_BUTTON)) {\r\n            movX = -this.mouse.velX() * this.mouseSensibility;\r\n            movY = -this.mouse.velY() * this.mouseSensibility;\r\n        } else if(this.gamepad.isConnect(_inputs_Gamepad__WEBPACK_IMPORTED_MODULE_3__[\"Gamepad\"].PLAYER1)){\r\n            movX = this.gamepad.getStickBX() * 0.08;\r\n            movY = this.gamepad.getStickBY() * 0.08;\r\n        } else {\r\n            movX = -this.gesture.swipX() * this.mouseSensibility;\r\n            movY = -this.gesture.swipY() * this.mouseSensibility;\r\n        }\r\n\r\n        this.distance += this.mouse.scrollVelY() * this.scrollSpeed;\r\n        this.distance += (this.gamepad.getButton(_inputs_Gamepad__WEBPACK_IMPORTED_MODULE_3__[\"Gamepad\"].LEFT_TRIGGER) - this.gamepad.getButton(_inputs_Gamepad__WEBPACK_IMPORTED_MODULE_3__[\"Gamepad\"].RIGHT_TRIGGER)) * this.scrollSpeed;\r\n        this.distance = Math.max(this.distance, 0.0001);\r\n        \r\n        let angle = Math.atan2(movX, movY);\r\n        let dist = Math.sqrt(Math.pow(movX, 2) + Math.pow(movY, 2));\r\n    \r\n        this.angle[0] -= Math.cos(angle) * dist;\r\n        this.angle[1] -= Math.sin(angle) * dist;\r\n\r\n\r\n        const cax = Math.cos(this.angle[0]);\r\n        const cay = Math.cos(this.angle[1]);\r\n        const say = Math.sin(this.angle[1]);\r\n\r\n        this.position[0] = (cay * cax              ) * this.distance + this.center[0];\r\n        this.position[1] = (Math.sin(this.angle[0])) * this.distance + this.center[1];\r\n        this.position[2] = (say * cax              ) * this.distance + this.center[2];\r\n\r\n\r\n        const angle2 = this.angle[0] + Camera.DEMIPI;\r\n        const cangle2 = Math.cos(angle2);\r\n        this.up[0] = cay * cangle2;\r\n        this.up[1] = Math.sin(angle2);\r\n        this.up[2] = say * cangle2;\r\n\r\n \r\n        _Matrix4__WEBPACK_IMPORTED_MODULE_0__[\"Matrix4\"].lookAt(this.camera, this.position, this.center, this.up);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/utils/Camera.js?");

/***/ }),

/***/ "../../../Akila/utils/Color.js":
/*!**************************************!*\
  !*** D:/GitHub/Akila/utils/Color.js ***!
  \**************************************/
/*! exports provided: Color */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Color\", function() { return Color; });\nclass Color {\r\n    static RGB2HSL(color, buffer = new Float32Array(3)) {\r\n        const r = Math.min(1, Math.max(0, color[0]));\r\n        const g = Math.min(1, Math.max(0, color[1]));\r\n        const b = Math.min(1, Math.max(0, color[2]));\r\n\r\n        const cMax = Math.max(r, g, b);\r\n        const cMin = Math.min(r, g, b);\r\n        const delta = cMax - cMin;\r\n\r\n        let h;\r\n\r\n        if(delta == 0) h = 0;\r\n        else if(cMax == r) h = 60 * ((g - b) / delta % 6);\r\n        else if(cMax == g) h = 60 * ((b - r) / delta + 2);\r\n        else h = 60 * ((r - g) / delta + 4);\r\n\r\n        const l = (cMax + cMin) / 2;\r\n\r\n        let s;\r\n\r\n        if(delta == 0) s = 0;\r\n        else s = delta / (1 - Math.abs(2 * l - 1));\r\n\r\n        buffer[0] = h;\r\n        buffer[1] = s;\r\n        buffer[2] = l;\r\n\r\n        return buffer;\r\n    }\r\n\r\n    static HSL2RGB(color, buffer = new Float32Array(3)) {\r\n        const h = Math.abs(color[0]) % 360;\r\n        const s = Math.min(1, Math.max(0, color[1]));\r\n        const l = Math.min(1, Math.max(0, color[2]));\r\n\r\n        const c = (1 - Math.abs(2 * l - 1)) * s;\r\n        const x = c * (1 - Math.abs((h / 60) % 2 - 1));\r\n        const m = l - c / 2;\r\n\r\n        const tmp = new Float32Array(3);\r\n\r\n        if(h < 60) {\r\n            tmp[0] = c;\r\n            tmp[1] = x;\r\n            tmp[2] = 0;\r\n        } else if(60 <= h && h < 120) {\r\n            tmp[0] = x;\r\n            tmp[1] = c;\r\n            tmp[2] = 0;\r\n        } else if(120 <= h && h < 180) {\r\n            tmp[0] = 0;\r\n            tmp[1] = c;\r\n            tmp[2] = x;\r\n        } else if(180 <= h && h < 240) {\r\n            tmp[0] = 0;\r\n            tmp[1] = x;\r\n            tmp[2] = c;\r\n        } else if(240 <= h && h < 300) {\r\n            tmp[0] = x;\r\n            tmp[1] = 0;\r\n            tmp[2] = c;\r\n        } else {\r\n            tmp[0] = c;\r\n            tmp[1] = 0;\r\n            tmp[2] = x;\r\n        }\r\n\r\n        buffer[0] = tmp[0] + m;\r\n        buffer[1] = tmp[1] + m;\r\n        buffer[2] = tmp[2] + m;\r\n\r\n        return buffer;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/utils/Color.js?");

/***/ }),

/***/ "../../../Akila/utils/LinkedStructure.js":
/*!************************************************!*\
  !*** D:/GitHub/Akila/utils/LinkedStructure.js ***!
  \************************************************/
/*! exports provided: LinkedList, LinkedStructure */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LinkedList\", function() { return LinkedList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LinkedStructure\", function() { return LinkedStructure; });\nclass LinkedList {\r\n    constructor(){\r\n        this.head = null;\r\n        this.tail = null;\r\n        this.count = 0;\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.count === 0;\r\n    }\r\n\r\n    get lenght() {\r\n        return this.count;\r\n    }\r\n\r\n    addFirst(data){\r\n        const node = {\r\n            data: data,\r\n            next: null\r\n        }\r\n\r\n        const tmpNode = this.head;\r\n        this.head = node;\r\n        this.head.next = tmpNode;\r\n        ++this.count;\r\n\r\n        if(this.count === 1) this.tail = this.head;\r\n    }\r\n\r\n    addLast(data){\r\n        const node = {\r\n            data: data,\r\n            next: null\r\n        }\r\n\r\n        if(this.count === 0) this.head = node;\r\n        else this.tail.next = node;\r\n\r\n        this.tail = node;\r\n        ++this.count;\r\n    }\r\n\r\n    deleteFisrt(){\r\n        if(this.count === 0) return;\r\n\r\n        this.head = this.head.next;\r\n        --this.count;\r\n\r\n        if(this.count === 0) this.tail = null;\r\n    }\r\n\r\n    deleteLast(){\r\n        if(this.count === 0) {\r\n            return;\r\n        } else if(this.count === 1) {\r\n            this.tail = null;\r\n            this.head = null;\r\n        } else {\r\n            let p = this.head;\r\n            while(p.next !== this.tail) {\r\n                p = p.next;\r\n            }\r\n            \r\n            p.next = null;\r\n            this.tail = p;\r\n        }\r\n\r\n        --this.count;\r\n    }\r\n\r\n    deleteFromIndex(position) {\r\n        if(position <= 0) this.deleteFisrt();\r\n        else if(position >= this.count - 1) this.deleteLast();\r\n        else {\r\n            let p = this.head, k = 0, q;\r\n            while(p !== null && k < position) {\r\n                ++k;\r\n                q = p;\r\n                p = p.next;\r\n            }\r\n\r\n            q.next = p.next;\r\n            --this.count;\r\n        }\r\n    }\r\n\r\n    delete(obj) {\r\n        let p = this.head, q;\r\n        if(p.data == obj) {\r\n            this.deleteFisrt();\r\n        } else {\r\n            while(p !== null && obj != p.data) {\r\n                q = p;\r\n                p = p.next;\r\n            }\r\n    \r\n            q.next = p.next;\r\n            --this.count;\r\n        }\r\n    }\r\n\r\n    [Symbol.iterator]() {\r\n        const buffer = {\r\n            value: null,\r\n            done: false\r\n        }\r\n\r\n        let currentNode = this.head;\r\n\r\n        return {\r\n            next() {\r\n                if(currentNode) {\r\n                    buffer.value = currentNode.data;\r\n                    currentNode = currentNode.next;\r\n                } else {\r\n                    buffer.done = true;\r\n                }\r\n\r\n                return buffer;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass LinkedStructure {\r\n    constructor() {\r\n        this.linkedLists = new Object();\r\n        this.removeBuffers = new Object();\r\n\r\n        this.names = new Array();\r\n    }\r\n\r\n    getNames() {\r\n        return this.names;\r\n    }\r\n\r\n    createList(name) {\r\n        const list = new LinkedList();\r\n        this.addList(name, list);\r\n        return list;\r\n    }\r\n\r\n    addList(name, list) {\r\n        if(!(list instanceof LinkedList)) return;\r\n        this.linkedLists[name] = list;\r\n        this.removeBuffers[name] = new LinkedList();\r\n        this.names.push(name);\r\n    }\r\n\r\n    getList(name) {\r\n        return this.linkedLists[name];\r\n    }\r\n\r\n    add(name, obj) {\r\n        this.linkedLists[name].addLast(obj);\r\n    }\r\n\r\n    delete(name, obj) {\r\n        this.removeBuffers[name].addLast(obj);\r\n    }\r\n\r\n    clear() {\r\n        for (const name of this.names) {\r\n            const list = this.linkedLists[name];\r\n            const buffer = this.removeBuffers[name];\r\n\r\n            for (const obj of buffer) {\r\n                list.delete(obj);\r\n                buffer.deleteFisrt();\r\n            }\r\n        }\r\n    }\r\n\r\n    [Symbol.iterator]() {\r\n        const buffer = {\r\n            value: null,\r\n            done: false\r\n        }\r\n\r\n        const names = this.names;\r\n        let nameIndex = 0;\r\n        const linkedLists = this.linkedLists;\r\n\r\n        let currentList = this.linkedLists[names[nameIndex]];\r\n\r\n        if(!currentList || !currentList.head) return {\r\n            next() {\r\n                return {done: true};\r\n            }\r\n        }\r\n\r\n        let currentNode = currentList.head;\r\n\r\n        return {\r\n            next() {\r\n                if(currentNode) {\r\n                    buffer.value = currentNode.data;\r\n                    currentNode = currentNode.next;\r\n                } else {\r\n                    currentList = linkedLists[names[++nameIndex]];\r\n\r\n                    if(!currentList || !currentList.head) buffer.done = true;\r\n                    else {\r\n                        currentNode = currentList.head.next;\r\n                        buffer.value = currentList.head.data;\r\n                    }\r\n                }\r\n\r\n                return buffer;\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/utils/LinkedStructure.js?");

/***/ }),

/***/ "../../../Akila/utils/Matrix3.js":
/*!****************************************!*\
  !*** D:/GitHub/Akila/utils/Matrix3.js ***!
  \****************************************/
/*! exports provided: Matrix3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Matrix3\", function() { return Matrix3; });\nclass Matrix3 {\r\n    static create() {\r\n        let out = new Float32Array(9);\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 1;\r\n        out[5] = 0;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n    \r\n    static identity(out) {\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 1;\r\n        out[5] = 0;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    static transpose(out, a) {\r\n        out[0] = a[0];\r\n        out[1] = a[3];\r\n        out[2] = a[6];\r\n        out[3] = a[1];\r\n        out[4] = a[4];\r\n        out[5] = a[7];\r\n        out[6] = a[2];\r\n        out[7] = a[5];\r\n        out[8] = a[8];\r\n\r\n        return out;\r\n    }\r\n\r\n    static invert(out, a) {\r\n        let a00 = a[0], a01 = a[1], a02 = a[2];\r\n        let a10 = a[3], a11 = a[4], a12 = a[5];\r\n        let a20 = a[6], a21 = a[7], a22 = a[8];\r\n\r\n        let b01 = a22 * a11 - a12 * a21;\r\n        let b11 = -a22 * a10 + a12 * a20;\r\n        let b21 = a21 * a10 - a11 * a20;\r\n        \r\n        let det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n        if (!det) {\r\n            return null;\r\n        }\r\n\r\n        det = 1.0 / det;\r\n\r\n        out[0] = b01 * det;\r\n        out[1] = (-a22 * a01 + a02 * a21) * det;\r\n        out[2] = (a12 * a01 - a02 * a11) * det;\r\n        out[3] = b11 * det;\r\n        out[4] = (a22 * a00 - a02 * a20) * det;\r\n        out[5] = (-a12 * a00 + a02 * a10) * det;\r\n        out[6] = b21 * det;\r\n        out[7] = (-a21 * a00 + a01 * a20) * det;\r\n        out[8] = (a11 * a00 - a01 * a10) * det;\r\n        return out;\r\n    }\r\n\r\n    static multiply(out, a, b) {\r\n        let a00 = a[0], a01 = a[1], a02 = a[2];\r\n        let a10 = a[3], a11 = a[4], a12 = a[5];\r\n        let a20 = a[6], a21 = a[7], a22 = a[8];\r\n\r\n        let b00 = b[0], b01 = b[1], b02 = b[2];\r\n        let b10 = b[3], b11 = b[4], b12 = b[5];\r\n        let b20 = b[6], b21 = b[7], b22 = b[8];\r\n\r\n        out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n        out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n        out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n        out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n        out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n        out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n        out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n        out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n        out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n        return out;\r\n    }\r\n\r\n    static translate(out, a, v) {\r\n        let a00 = a[0], a01 = a[1], a02 = a[2],\r\n        a10 = a[3], a11 = a[4], a12 = a[5],\r\n        a20 = a[6], a21 = a[7], a22 = a[8],\r\n        x = v[0], y = v[1];\r\n\r\n        out[0] = a00;\r\n        out[1] = a01;\r\n        out[2] = a02;\r\n\r\n        out[3] = a10;\r\n        out[4] = a11;\r\n        out[5] = a12;\r\n\r\n        out[6] = x * a00 + y * a10 + a20;\r\n        out[7] = x * a01 + y * a11 + a21;\r\n        out[8] = x * a02 + y * a12 + a22;\r\n        return out;\r\n    }\r\n\r\n    static rotate(out, a, rad) {\r\n        let a00 = a[0], a01 = a[1], a02 = a[2],\r\n        a10 = a[3], a11 = a[4], a12 = a[5],\r\n        a20 = a[6], a21 = a[7], a22 = a[8],\r\n\r\n        s = Math.sin(rad),\r\n        c = Math.cos(rad);\r\n\r\n        out[0] = c * a00 + s * a10;\r\n        out[1] = c * a01 + s * a11;\r\n        out[2] = c * a02 + s * a12;\r\n\r\n        out[3] = c * a10 - s * a00;\r\n        out[4] = c * a11 - s * a01;\r\n        out[5] = c * a12 - s * a02;\r\n\r\n        out[6] = a20;\r\n        out[7] = a21;\r\n        out[8] = a22;\r\n        return out;\r\n    };\r\n\r\n    static scale(out, a, v) {\r\n        let x = v[0], y = v[1];\r\n\r\n        out[0] = x * a[0];\r\n        out[1] = x * a[1];\r\n        out[2] = x * a[2];\r\n\r\n        out[3] = y * a[3];\r\n        out[4] = y * a[4];\r\n        out[5] = y * a[5];\r\n\r\n        out[6] = a[6];\r\n        out[7] = a[7];\r\n        out[8] = a[8];\r\n        return out;\r\n    }\r\n\r\n    static fromTranslation(out, v) {\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 1;\r\n        out[5] = 0;\r\n        out[6] = v[0];\r\n        out[7] = v[1];\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    static fromRotation(out, rad) {\r\n        let s = Math.sin(rad), c = Math.cos(rad);\r\n\r\n        out[0] = c;\r\n        out[1] = s;\r\n        out[2] = 0;\r\n\r\n        out[3] = -s;\r\n        out[4] = c;\r\n        out[5] = 0;\r\n\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    static projection(out, width, height) {\r\n        out[0] = 2 / width;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = -2 / height;\r\n        out[5] = 0;\r\n        out[6] = -1;\r\n        out[7] = 1;\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    static frob(a) {\r\n        return(Math.hypot(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]))\r\n    }\r\n\r\n    static add(out, a, b) {\r\n        out[0] = a[0] + b[0];\r\n        out[1] = a[1] + b[1];\r\n        out[2] = a[2] + b[2];\r\n        out[3] = a[3] + b[3];\r\n        out[4] = a[4] + b[4];\r\n        out[5] = a[5] + b[5];\r\n        out[6] = a[6] + b[6];\r\n        out[7] = a[7] + b[7];\r\n        out[8] = a[8] + b[8];\r\n        return out;\r\n    }\r\n\r\n    static subtract(out, a, b) {\r\n        out[0] = a[0] - b[0];\r\n        out[1] = a[1] - b[1];\r\n        out[2] = a[2] - b[2];\r\n        out[3] = a[3] - b[3];\r\n        out[4] = a[4] - b[4];\r\n        out[5] = a[5] - b[5];\r\n        out[6] = a[6] - b[6];\r\n        out[7] = a[7] - b[7];\r\n        out[8] = a[8] - b[8];\r\n        return out;\r\n    }\r\n\r\n    static multiplyScalar(out, a, b) {\r\n        out[0] = a[0] * b;\r\n        out[1] = a[1] * b;\r\n        out[2] = a[2] * b;\r\n        out[3] = a[3] * b;\r\n        out[4] = a[4] * b;\r\n        out[5] = a[5] * b;\r\n        out[6] = a[6] * b;\r\n        out[7] = a[7] * b;\r\n        out[8] = a[8] * b;\r\n        return out;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/utils/Matrix3.js?");

/***/ }),

/***/ "../../../Akila/utils/Matrix4.js":
/*!****************************************!*\
  !*** D:/GitHub/Akila/utils/Matrix4.js ***!
  \****************************************/
/*! exports provided: Matrix4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Matrix4\", function() { return Matrix4; });\nclass Matrix4 {\r\n\r\n  static identity(out = new Float32Array(16)) {\r\n    out[0]  = 1; out[1]  = 0; out[2]  = 0; out[3]  = 0;\r\n    out[4]  = 0; out[5]  = 1; out[6]  = 0; out[7]  = 0;\r\n    out[8]  = 0; out[9]  = 0; out[10] = 1; out[11] = 0;\r\n    out[12] = 0; out[13] = 0; out[14] = 0; out[15] = 1;\r\n    return out;\r\n  }\r\n\r\n  static lookAt(out, eye, center, up) {\r\n    let x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\r\n        eyex = eye[0],\r\n        eyey = eye[1],\r\n        eyez = eye[2],\r\n        upx = up[0],\r\n        upy = up[1],\r\n        upz = up[2],\r\n        centerx = center[0],\r\n        centery = center[1],\r\n        centerz = center[2];\r\n\r\n    if (Math.abs(eyex - centerx) < Matrix4.EPSILON &&\r\n        Math.abs(eyey - centery) < Matrix4.EPSILON &&\r\n        Math.abs(eyez - centerz) < Matrix4.EPSILON) {\r\n        return Matrix4.identity(out);\r\n    }\r\n\r\n    z0 = eyex - centerx;\r\n    z1 = eyey - centery;\r\n    z2 = eyez - centerz;\r\n\r\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n\r\n    x0 = upy * z2 - upz * z1;\r\n    x1 = upz * z0 - upx * z2;\r\n    x2 = upx * z1 - upy * z0;\r\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n    if (!len) {\r\n        x0 = 0;\r\n        x1 = 0;\r\n        x2 = 0;\r\n    } else {\r\n        len = 1 / len;\r\n        x0 *= len;\r\n        x1 *= len;\r\n        x2 *= len;\r\n    }\r\n\r\n    y0 = z1 * x2 - z2 * x1;\r\n    y1 = z2 * x0 - z0 * x2;\r\n    y2 = z0 * x1 - z1 * x0;\r\n\r\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n    if (!len) {\r\n        y0 = 0;\r\n        y1 = 0;\r\n        y2 = 0;\r\n    } else {\r\n        len = 1 / len;\r\n        y0 *= len;\r\n        y1 *= len;\r\n        y2 *= len;\r\n    }\r\n\r\n    out[0] = x0; out[1] = y0; out[2]  = z0; out[3]  = 0;\r\n    out[4] = x1; out[5] = y1; out[6]  = z1; out[7]  = 0;\r\n    out[8] = x2; out[9] = y2; out[10] = z2; out[11] = 0;\r\n\r\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n    out[15] = 1;\r\n\r\n    return out;\r\n  }\r\n\r\n  static perspective(out, fovy, aspect, near, far) {\r\n    let f = 1.0 / Math.tan(fovy / 2);\r\n    let nf = 1 / (near - far);\r\n\r\n    out[0]  = f / aspect; out[1]  = 0; out[2]  = 0;                     out[3]  = 0;\r\n    out[4]  = 0;          out[5]  = f; out[6]  = 0;                     out[7]  = 0;\r\n    out[8]  = 0;          out[9]  = 0; out[10] = (far + near) * nf;     out[11] = -1;\r\n    out[12] = 0;          out[13] = 0; out[14] = (2 * far * near) * nf; out[15] = 1;\r\n    return out;\r\n  }\r\n\r\n  static ortho(out, left, right, bottom, top, near, far) {\r\n\t    let lr = 1 / (left - right),\r\n\t        bt = 1 / (bottom - top),\r\n\t        nf = 1 / (near - far);\r\n\t    out[0] = -2 * lr;\r\n\t    out[1] = 0;\r\n\t    out[2] = 0;\r\n\t    out[3] = 0;\r\n\t    out[4] = 0;\r\n\t    out[5] = -2 * bt;\r\n\t    out[6] = 0;\r\n\t    out[7] = 0;\r\n\t    out[8] = 0;\r\n\t    out[9] = 0;\r\n\t    out[10] = 2 * nf;\r\n\t    out[11] = 0;\r\n\t    out[12] = (left + right) * lr;\r\n\t    out[13] = (top + bottom) * bt;\r\n\t    out[14] = (far + near) * nf;\r\n\t    out[15] = 1;\r\n\t    return out;\r\n\t}\r\n\r\n  static multiply(out, a, b) {\r\n    const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n    let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\r\n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\r\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\r\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\r\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n    return out;\r\n\t}\r\n\r\n  static fromRotation(out, rad, axis) {\r\n    let x = axis[0], y = axis[1], z = axis[2],\r\n        len = Math.sqrt(x * x + y * y + z * z),\r\n        s, c, t;\r\n\r\n    if (Math.abs(len) < Matrix4.EPSILON) { return null; }\r\n\r\n    len = 1 / len;\r\n    x *= len;\r\n    y *= len;\r\n    z *= len;\r\n\r\n    s = Math.sin(rad);\r\n    c = Math.cos(rad);\r\n    t = 1 - c;\r\n\r\n    // Perform rotation-specific matrix multiplication\r\n    out[0] = x * x * t + c;\r\n    out[1] = y * x * t + z * s;\r\n    out[2] = z * x * t - y * s;\r\n    out[3] = 0;\r\n    out[4] = x * y * t - z * s;\r\n    out[5] = y * y * t + c;\r\n    out[6] = z * y * t + x * s;\r\n    out[7] = 0;\r\n    out[8] = x * z * t + y * s;\r\n    out[9] = y * z * t - x * s;\r\n    out[10] = z * z * t + c;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n    out[15] = 1;\r\n    return out;\r\n  }\r\n  \r\n  static invert(out, a) {\r\n    const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n        b00 = a00 * a11 - a01 * a10,\r\n        b01 = a00 * a12 - a02 * a10,\r\n        b02 = a00 * a13 - a03 * a10,\r\n        b03 = a01 * a12 - a02 * a11,\r\n        b04 = a01 * a13 - a03 * a11,\r\n        b05 = a02 * a13 - a03 * a12,\r\n        b06 = a20 * a31 - a21 * a30,\r\n        b07 = a20 * a32 - a22 * a30,\r\n        b08 = a20 * a33 - a23 * a30,\r\n        b09 = a21 * a32 - a22 * a31,\r\n        b10 = a21 * a33 - a23 * a31,\r\n        b11 = a22 * a33 - a23 * a32;\r\n\r\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (!det) return null; \r\n\r\n    det = 1.0 / det;\r\n\r\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n    return out;\r\n  }\r\n}\r\n\r\nMatrix4.EPSILON = 0.000001;\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/utils/Matrix4.js?");

/***/ }),

/***/ "../../../Akila/utils/Parser.js":
/*!***************************************!*\
  !*** D:/GitHub/Akila/utils/Parser.js ***!
  \***************************************/
/*! exports provided: Parser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Parser\", function() { return Parser; });\nclass Parser {\r\n  static objIndex(textFile){\r\n    const lines = textFile.split('\\n').map(l => l.split(/(\\s+)/).filter(s => s.trim().length > 0));\r\n\r\n    const verts = new Array();\r\n    const vertNorms = new Array();\r\n    const vertTexs = new Array();\r\n    const faces = new Array();\r\n    const indices = new Array();\r\n\r\n    for (let line of lines) {\r\n      switch (line[0]) {\r\n        case \"v\":\r\n          verts.push({\r\n            x: parseFloat(line[1]),\r\n            y: parseFloat(line[2]),\r\n            z: parseFloat(line[3])\r\n          });\r\n        break;\r\n\r\n        case \"vn\":\r\n          vertNorms.push({\r\n            x: parseFloat(line[1]),\r\n            y: parseFloat(line[2]),\r\n            z: parseFloat(line[3])\r\n          });\r\n        break;\r\n\r\n        case \"vt\":\r\n          vertTexs.push({\r\n            u: parseFloat(line[1]),\r\n            v: parseFloat(line[2])\r\n          });\r\n        break;\r\n\r\n        case \"f\":\r\n          const p1 = line[1].split('/');\r\n          const p2 = line[2].split('/');\r\n          const p3 = line[3].split('/');\r\n\r\n          faces.push({\r\n            vert1: parseInt(p1[0]) - 1,\r\n            vert2: parseInt(p2[0]) - 1,\r\n            vert3: parseInt(p3[0]) - 1,\r\n\r\n            tex1: parseInt(p1[1]) - 1,\r\n            tex2: parseInt(p2[1]) - 1,\r\n            tex3: parseInt(p3[1]) - 1,\r\n\r\n            norm1: parseInt(p1[2]) - 1,\r\n            norm2: parseInt(p2[2]) - 1,\r\n            norm3: parseInt(p3[2]) - 1\r\n          });\r\n\r\n          indices.push(parseInt(p1[0]) - 1);\r\n      \t\tindices.push(parseInt(p2[0]) - 1);\r\n      \t\tindices.push(parseInt(p3[0]) - 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    const vertsF = new Array();\r\n    const vertNormsF = new Array();\r\n    const vertTexsF = new Array();\r\n\r\n    for (const f of faces) {\r\n      const index13 = f.vert1 * 3;\r\n      const index12 = f.vert1 * 2;\r\n\r\n      const index23 = f.vert2 * 3;\r\n      const index22 = f.vert2 * 2;\r\n\r\n      const index33 = f.vert3 * 3;\r\n      const index32 = f.vert3 * 2;\r\n\r\n      vertsF[index13] = verts[f.vert1].x\r\n      vertsF[index13+1] = verts[f.vert1].y\r\n      vertsF[index13+2] = verts[f.vert1].z\r\n\r\n      vertsF[index23] = verts[f.vert2].x\r\n      vertsF[index23+1] = verts[f.vert2].y\r\n      vertsF[index23+2] = verts[f.vert2].z\r\n\r\n      vertsF[index33] = verts[f.vert3].x\r\n      vertsF[index33+1] = verts[f.vert3].y\r\n      vertsF[index33+2] = verts[f.vert3].z\r\n\r\n      if(vertTexs.length > 0){\r\n        vertTexsF[index12] = vertTexs[f.tex1].u;\r\n        vertTexsF[index12+1] = vertTexs[f.tex1].v;\r\n\r\n        vertTexsF[index22] = vertTexs[f.tex2].u;\r\n        vertTexsF[index22+1] = vertTexs[f.tex2].v;\r\n\r\n        vertTexsF[index32] = vertTexs[f.tex3].u;\r\n        vertTexsF[index32+1] = vertTexs[f.tex3].v;\r\n      }\r\n\r\n      if(vertNorms.length > 0){\r\n        vertNormsF[index13] = vertNorms[f.norm1].x\r\n        vertNormsF[index13+1] = vertNorms[f.norm1].y\r\n        vertNormsF[index13+2] = vertNorms[f.norm1].z\r\n\r\n        vertNormsF[index23] = vertNorms[f.norm2].x\r\n        vertNormsF[index23+1] = vertNorms[f.norm2].y\r\n        vertNormsF[index23+2] = vertNorms[f.norm2].z\r\n\r\n        vertNormsF[index33] = vertNorms[f.norm3].x\r\n        vertNormsF[index33+1] = vertNorms[f.norm3].y\r\n        vertNormsF[index33+2] = vertNorms[f.norm3].z\r\n      }\r\n    }\r\n\r\n    return {\r\n      vertex: new Float32Array(vertsF),\r\n      normal: new Float32Array(vertNormsF),\r\n      uv: new Float32Array(vertTexsF),\r\n      index: new Uint16Array(indices)\r\n    };\r\n  }\r\n\r\n  static obj(file, params = {scale: 1, vertex: true, normal: true, uv: true, calculateNormal: false}) {\r\n    if(typeof params != \"object\") params = {};\r\n    params.scale = params.scale == undefined ? 1 : params.scale;\r\n    params.vertex = params.vertex == undefined ? true : params.vertex;\r\n    params.normal = params.normal == undefined ? true : params.normal;\r\n    params.uv = params.uv == undefined ? true : params.uv;\r\n    params.calculateNormal = params.calculateNormal == undefined ? false : params.calculateNormal;\r\n\r\n    const lines = file.split('\\n').map(l => l.split(/(\\s+)/).filter(s => s.trim().length > 0));\r\n\r\n    const scale = params.scale;\r\n\r\n    let maxX = -Infinity;\r\n    let maxY = -Infinity;\r\n    let maxZ = -Infinity;\r\n\r\n    let minX = Infinity;\r\n    let minY = Infinity;\r\n    let minZ = Infinity;\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    const sub = (a, b) => {\r\n        return {\r\n            x: b.x-a.x,\r\n            y: b.y-a.y,\r\n            z: b.z-a.z\r\n        }\r\n    }\r\n\r\n    const cross = (u, v) => {\r\n        return {\r\n            x: u.y*v.z - u.z*v.y,\r\n            y: u.z*v.x - u.x*v.z,\r\n            z: u.x*v.y - u.y*v.x\r\n        }\r\n    }\r\n\r\n    const norm = (v) => {\r\n        return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\r\n    }\r\n\r\n    const normalize = (v) => {\r\n        let n = norm(v)\r\n        return {\r\n            x: v.x/n,\r\n            y: v.y/n,\r\n            z: v.z/n\r\n        }\r\n    }\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n    const verts = new Array();\r\n    const vertNorms = new Array();\r\n    const vertTexs = new Array();\r\n    const faces = new Array();\r\n\r\n    for (let line of lines) {\r\n        switch (line[0]) {\r\n            case \"v\":\r\n                verts.push({\r\n                    x: parseFloat(line[1]),\r\n                    y: parseFloat(line[2]),\r\n                    z: parseFloat(line[3])\r\n                });\r\n            break;\r\n\r\n            case \"vn\":\r\n                vertNorms.push({\r\n                    x: parseFloat(line[1]),\r\n                    y: parseFloat(line[2]),\r\n                    z: parseFloat(line[3])\r\n                });\r\n            break;\r\n\r\n            case \"vt\":\r\n                vertTexs.push({\r\n                    u: parseFloat(line[1]),\r\n                    v: parseFloat(line[2])\r\n                });\r\n            break;\r\n\r\n            case \"f\":\r\n                const p1 = line[1].split('/');\r\n                const p2 = line[2].split('/');\r\n                const p3 = line[3].split('/');\r\n\r\n                faces.push({\r\n                    vert1: parseInt(p1[0]) - 1,\r\n                    vert2: parseInt(p2[0]) - 1,\r\n                    vert3: parseInt(p3[0]) - 1,\r\n\r\n                    tex1: parseInt(p1[1]) - 1,\r\n                    tex2: parseInt(p2[1]) - 1,\r\n                    tex3: parseInt(p3[1]) - 1,\r\n\r\n                    norm1: parseInt(p1[2]) - 1,\r\n                    norm2: parseInt(p2[2]) - 1,\r\n                    norm3: parseInt(p3[2]) - 1\r\n                });\r\n            break;\r\n        }\r\n    }\r\n\r\n    let facesListe = new Array();\r\n\r\n    for (let f of faces) {\r\n        const face = {\r\n            vert1: verts[f.vert1],\r\n            vert2: verts[f.vert2],\r\n            vert3: verts[f.vert3],\r\n\r\n            tex1: vertTexs[f.tex1],\r\n            tex2: vertTexs[f.tex2],\r\n            tex3: vertTexs[f.tex3],\r\n\r\n            norm1: vertNorms[f.norm1],\r\n            norm2: vertNorms[f.norm2],\r\n            norm3: vertNorms[f.norm3],\r\n        }\r\n\r\n        if(params.calculateNormal) {\r\n            let n = normalize(cross(sub(face.vert1, face.vert2), sub(face.vert1, face.vert3)));\r\n\r\n            face.norm1 = n;\r\n            face.norm2 = n;\r\n            face.norm3 = n;\r\n        }\r\n\r\n        facesListe.push(face);\r\n    }\r\n\r\n    const vertsF = new Array();\r\n    const vertNormsF = new Array();\r\n    const vertTexsF = new Array();\r\n\r\n    for(let f of facesListe){\r\n        const x1 = f.vert1.x * scale;\r\n        const y1 = f.vert1.y * scale;\r\n        const z1 = f.vert1.z * scale;\r\n\r\n        const x2 = f.vert2.x * scale;\r\n        const y2 = f.vert2.y * scale;\r\n        const z2 = f.vert2.z * scale;\r\n\r\n        const x3 = f.vert3.x * scale;\r\n        const y3 = f.vert3.y * scale;\r\n        const z3 = f.vert3.z * scale;\r\n\r\n        vertsF.push(x1);\r\n        vertsF.push(y1);\r\n        vertsF.push(z1);\r\n\r\n        vertsF.push(x2);\r\n        vertsF.push(y2);\r\n        vertsF.push(z2);\r\n\r\n        vertsF.push(x3);\r\n        vertsF.push(y3);\r\n        vertsF.push(z3);\r\n\r\n        if(x1 > maxX) maxX = x1;\r\n        if(y1 > maxY) maxY = y1;\r\n        if(z1 > maxZ) maxZ = z1;\r\n\r\n        if(x2 > maxX) maxX = x2;\r\n        if(y2 > maxY) maxY = y2;\r\n        if(z2 > maxZ) maxZ = z2;\r\n\r\n        if(x3 > maxX) maxX = x3;\r\n        if(y3 > maxY) maxY = y3;\r\n        if(z3 > maxZ) maxZ = z3;\r\n        \r\n\r\n        if(x1 < minX) minX = x1;\r\n        if(y1 < minY) minY = y1;\r\n        if(z1 < minZ) minZ = z1;\r\n\r\n        if(x2 < minX) minX = x2;\r\n        if(y2 < minY) minY = y2;\r\n        if(z2 < minZ) minZ = z2;\r\n\r\n        if(x3 < minX) minX = x3;\r\n        if(y3 < minY) minY = y3;\r\n        if(z3 < minZ) minZ = z3;\r\n\r\n\r\n        if(vertTexs.length > 0) {\r\n            vertTexsF.push(f.tex1.u);\r\n            vertTexsF.push(f.tex1.v);\r\n\r\n            vertTexsF.push(f.tex2.u);\r\n            vertTexsF.push(f.tex2.v);\r\n\r\n            vertTexsF.push(f.tex3.u);\r\n            vertTexsF.push(f.tex3.v);\r\n        }\r\n\r\n        if(vertNorms.length > 0 || params.calculateNormal) {\r\n            vertNormsF.push(f.norm1.x);\r\n            vertNormsF.push(f.norm1.y);\r\n            vertNormsF.push(f.norm1.z);\r\n\r\n            vertNormsF.push(f.norm2.x);\r\n            vertNormsF.push(f.norm2.y);\r\n            vertNormsF.push(f.norm2.z);\r\n\r\n            vertNormsF.push(f.norm3.x);\r\n            vertNormsF.push(f.norm3.y);\r\n            vertNormsF.push(f.norm3.z);\r\n        }\r\n    }\r\n\r\n    const object = {}\r\n\r\n    if(params.vertex) {\r\n        object.vertex = new Float32Array(vertsF);\r\n\r\n        object.maxX = maxX;\r\n        object.maxY = maxY;\r\n        object.maxZ = maxZ;\r\n\r\n        object.minX = minX;\r\n        object.minY = minY;\r\n        object.minZ = minZ;\r\n\r\n        object.lengthX = Math.abs(maxX - minX);\r\n        object.lengthY = Math.abs(maxY - minY);\r\n        object.lengthZ = Math.abs(maxZ - minZ);\r\n    }\r\n    if(params.normal) object.normal = new Float32Array(vertNormsF);\r\n    if(params.uv) object.uv = new Float32Array(vertTexsF);\r\n\r\n    return object;\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n  static ply(file, params = {x: true, y: true, z: true, nx: true, ny: true, nz: true, u: true, v: true, red: true, green: true, blue: true, alpha: false}) {\r\n    params.x = params.x == undefined ? true : params.x;\r\n    params.y = params.y == undefined ? true : params.y;\r\n    params.z = params.z == undefined ? true : params.z;\r\n    params.nx = params.nx == undefined ? true : params.nx;\r\n    params.ny = params.ny == undefined ? true : params.ny;\r\n    params.nz = params.nz == undefined ? true : params.nz;\r\n    params.u = params.u == undefined ? true : params.u;\r\n    params.v = params.v == undefined ? true : params.v;\r\n    params.red = params.red == undefined ? true : params.red;\r\n    params.green = params.green == undefined ? true : params.green;\r\n    params.blue = params.blue == undefined ? true : params.blue;\r\n    params.alpha = params.alpha == undefined ? false : params.alpha;\r\n    \r\n    const lines = file.split('\\n').map(l => l.split(/(\\s+)/).filter(s => s.trim().length > 0));\r\n\r\n    const vertex = new Array();\r\n    const normal = new Array();\r\n    const uv = new Array();\r\n    const color = new Array();\r\n    const indices = new Array();\r\n\r\n    let index = 0;\r\n\r\n    if(lines[index][0] == 'ply') ++index;\r\n\r\n    if(lines[index][0] != 'format' && lines[index][1] != 'ascii') {\r\n      console.error('Mauvais format ply');\r\n      return;\r\n    } else {\r\n      ++index;\r\n    }\r\n\r\n    let vertexNumber = 0;\r\n    let faceNumber = 0;\r\n    let propertyMaxIndex = 0;\r\n    let x = -1, y = -1, z = -1, nx = -1, ny = -1, nz = -1, s = -1, t = -1, red = -1, green = -1, blue = -1, alpha = -1;\r\n\r\n    while(lines[index] != 'end_header') {\r\n      const line = lines[++index];\r\n\r\n      if(line.length == 0) continue;\r\n      if(line[0] == 'comment') continue;\r\n\r\n      if(line[0] == 'element') {\r\n        if(line[1] == 'vertex') {\r\n          vertexNumber = parseInt(line[2]);\r\n        } else if(line[1] == 'face') {\r\n          faceNumber = parseInt(line[2]);\r\n        }\r\n\r\n        continue;\r\n      }\r\n\r\n      if(line[0] == 'property') {\r\n        if(line[1] == 'float') {\r\n          if(line[2] == 'x') x = propertyMaxIndex++;\r\n          if(line[2] == 'y') y = propertyMaxIndex++;\r\n          if(line[2] == 'z') z = propertyMaxIndex++;\r\n\r\n          if(line[2] == 'nx') nx = propertyMaxIndex++;\r\n          if(line[2] == 'ny') ny = propertyMaxIndex++;\r\n          if(line[2] == 'nz') nz = propertyMaxIndex++;\r\n\r\n          if(line[2] == 's') s = propertyMaxIndex++;\r\n          if(line[2] == 't') t = propertyMaxIndex++;\r\n        } else if(line[1] == 'uchar') {\r\n          if(line[2] == 'red') red = propertyMaxIndex++;\r\n          if(line[2] == 'green') green = propertyMaxIndex++;\r\n          if(line[2] == 'blue') blue = propertyMaxIndex++;\r\n          if(line[2] == 'alpha') alpha = propertyMaxIndex++;\r\n        }\r\n      }\r\n    }\r\n    ++index;\r\n\r\n    \r\n    for(const finVertex = index + vertexNumber; index < finVertex; ++index) {\r\n      const line = lines[index];\r\n\r\n      if(x != -1 && params.x) vertex.push(parseFloat(line[x]));\r\n      if(y != -1 && params.y) vertex.push(parseFloat(line[y]));\r\n      if(z != -1 && params.z) vertex.push(parseFloat(line[z]));\r\n\r\n      if(nx != -1 && params.nx) normal.push(parseFloat(line[nx]));\r\n      if(ny != -1 && params.ny) normal.push(parseFloat(line[ny]));\r\n      if(nz != -1 && params.nz) normal.push(parseFloat(line[nz]));\r\n\r\n      if(s != -1 && params.s) uv.push(parseFloat(line[s]));\r\n      if(t != -1 && params.s) uv.push(parseFloat(line[t]));\r\n\r\n      if(red != -1 && params.red) color.push(parseInt(line[red]) / 255);\r\n      if(green != -1 && params.green) color.push(parseInt(line[green]) / 255);\r\n      if(blue != -1 && params.blue) color.push(parseInt(line[blue]) / 255);\r\n      if(alpha != -1 && params.alpha) color.push(parseInt(line[alpha]) / 255);\r\n    }\r\n\r\n    for(const finFace = index + faceNumber; index < finFace; ++index) {\r\n      const line = lines[index];\r\n\r\n      if(line[0] == '3') {\r\n        indices.push(parseInt(line[1]));\r\n        indices.push(parseInt(line[2]));\r\n        indices.push(parseInt(line[3]));\r\n      }\r\n    }\r\n\r\n    return {\r\n      vertex: new Float32Array(vertex),\r\n      normal: new Float32Array(normal),\r\n      uv: new Float32Array(uv),\r\n      color: new Float32Array(color),\r\n      index: new Int16Array(indices)\r\n    };\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/utils/Parser.js?");

/***/ }),

/***/ "../../../Akila/utils/Vector2.js":
/*!****************************************!*\
  !*** D:/GitHub/Akila/utils/Vector2.js ***!
  \****************************************/
/*! exports provided: Vector2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Vector2\", function() { return Vector2; });\nclass Vector2 {\r\n\r\n    static create() {\r\n        const out = new Float32Array(2);\r\n        out[0] = 0;\r\n        out[1] = 0;\r\n        return out;\r\n    }\r\n\r\n    static clear(out) {\r\n        out[0]  = 0;\r\n        out[1]  = 0;\r\n        return out;\r\n    }\r\n\r\n    static add(out, a, b) {\r\n        out[0] = a[0] + b[0];\r\n        out[1] = a[1] + b[1];\r\n        return out;\r\n    }\r\n\r\n    static subtract(out, a, b) {\r\n        out[0] = a[0] - b[0];\r\n        out[1] = a[1] - b[1];\r\n        return out;\r\n    }\r\n\r\n    static multiply(out, a, b) {\r\n        out[0] = a[0] * b[0];\r\n        out[1] = a[1] * b[1];\r\n        return out;\r\n    }\r\n\r\n    static divide(out, a, b) {\r\n        out[0] = a[0] / b[0];\r\n        out[1] = a[1] / b[1];\r\n        return out;\r\n    }\r\n\r\n    static min(out, a, b) {\r\n        out[0] = Math.min(a[0], b[0]);\r\n        out[1] = Math.min(a[1], b[1]);\r\n        return out;\r\n    }\r\n\r\n    static max(out, a, b) {\r\n        out[0] = Math.max(a[0], b[0]);\r\n        out[1] = Math.max(a[1], b[1]);\r\n        return out;\r\n    }\r\n\r\n    static length(a) {\r\n        return Math.hypot(a[0], a[1]);\r\n    }\r\n\r\n    static distance(a, b) {\r\n        return Math.hypot(b[0] - a[0], b[1] - a[1]);\r\n    }\r\n\r\n    static normalize(out, a) {\r\n        let x = a[0], y = a[1];\r\n        let len = x*x + y*y;\r\n        if (len > 0) len = 1 / Math.sqrt(len);\r\n        out[0] = a[0] * len;\r\n        out[1] = a[1] * len;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * produit scalaire\r\n     */\r\n    static dot(a, b) {\r\n        return a[0] * b[0] + a[1] * b[1];\r\n    }\r\n\r\n    /**\r\n     * produit vectoriel\r\n     */\r\n    static cross(out, a, b) {\r\n        let z = a[0] * b[1] - a[1] * b[0];\r\n        out[0] = out[1] = 0;\r\n        out[2] = z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * interpolation lineaire\r\n     */\r\n    static lerp(out, a, b, t) {\r\n        let ax = a[0], ay = a[1];\r\n        out[0] = ax + t * (b[0] - ax);\r\n        out[1] = ay + t * (b[1] - ay);\r\n        return out;\r\n    }\r\n\r\n    static rotate(out, a, b, angle) {\r\n        let p0 = a[0] - b[0],\r\n        p1 = a[1] - b[1],\r\n        sinC = Math.sin(angle),\r\n        cosC = Math.cos(angle);\r\n        \r\n        out[0] = p0 * cosC - p1 * sinC + b[0];\r\n        out[1] = p0 * sinC + p1 * cosC + b[1];\r\n      \r\n        return out;\r\n    }\r\n\r\n    static angle(a, b) {\r\n        let x1 = a[0],\r\n        y1 = a[1],\r\n        x2 = b[0],\r\n        y2 = b[1];\r\n        \r\n        let len1 = x1 * x1 + y1 * y1;\r\n        if (len1 > 0) len1 = 1 / Math.sqrt(len1);\r\n        \r\n        let len2 = x2 * x2 + y2 * y2;\r\n        if (len2 > 0) len2 = 1 / Math.sqrt(len2);\r\n        \r\n        let cosine = (x1 * x2 + y1 * y2) * len1 * len2;\r\n        \r\n        if(cosine > 1.0) return 0;\r\n        else if(cosine < -1.0) return Math.PI;\r\n        else return Math.acos(cosine);\r\n    }\r\n}\n\n//# sourceURL=webpack:///D:/GitHub/Akila/utils/Vector2.js?");

/***/ }),

/***/ "../../../Akila/utils/Vector3.js":
/*!****************************************!*\
  !*** D:/GitHub/Akila/utils/Vector3.js ***!
  \****************************************/
/*! exports provided: Vector3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Vector3\", function() { return Vector3; });\nclass Vector3 {\r\n\r\n    static create() {\r\n        const out = new Float32Array(3);\r\n        out[0] = 0;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        return out;\r\n    }\r\n\r\n    static clear(out) {\r\n        out[0]  = 0;\r\n        out[1]  = 0;\r\n        out[2]  = 0;\r\n        return out;\r\n    }\r\n\r\n    static add(out, a, b) {\r\n        out[0] = a[0] + b[0];\r\n        out[1] = a[1] + b[1];\r\n        out[2] = a[2] + b[2];\r\n        return out;\r\n    }\r\n\r\n    static subtract(out, a, b) {\r\n        out[0] = a[0] - b[0];\r\n        out[1] = a[1] - b[1];\r\n        out[2] = a[2] - b[2];\r\n        return out;\r\n    }\r\n\r\n    static multiply(out, a, b) {\r\n        out[0] = a[0] * b[0];\r\n        out[1] = a[1] * b[1];\r\n        out[2] = a[2] * b[2];\r\n        return out;\r\n    }\r\n\r\n    static divide(out, a, b) {\r\n        out[0] = a[0] / b[0];\r\n        out[1] = a[1] / b[1];\r\n        out[2] = a[2] / b[2];\r\n        return out;\r\n    }\r\n\r\n    static min(out, a, b) {\r\n        out[0] = Math.min(a[0], b[0]);\r\n        out[1] = Math.min(a[1], b[1]);\r\n        out[2] = Math.min(a[2], b[2]);\r\n        return out;\r\n    }\r\n\r\n    static max(out, a, b) {\r\n        out[0] = Math.max(a[0], b[0]);\r\n        out[1] = Math.max(a[1], b[1]);\r\n        out[2] = Math.max(a[2], b[2]);\r\n        return out;\r\n    }\r\n\r\n    static length(a) {\r\n        return Math.hypot(a[0], a[1], a[2]);\r\n    }\r\n\r\n    static distance(a, b) {\r\n        return Math.hypot(b[0] - a[0], b[1] - a[1], b[2] - a[2]);\r\n    }\r\n\r\n    static normalize(out, a) {\r\n        let x = a[0], y = a[1], z = a[2];\r\n        let len = x*x + y*y + z*z;\r\n        if (len > 0) len = 1 / Math.sqrt(len);\r\n        out[0] = a[0] * len;\r\n        out[1] = a[1] * len;\r\n        out[2] = a[2] * len;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * interpolation lineaire\r\n     */\r\n    static lerp(out, a, b, t) {\r\n        let ax = a[0], ay = a[1], az = a[2];\r\n        out[0] = ax + t * (b[0] - ax);\r\n        out[1] = ay + t * (b[1] - ay);\r\n        out[2] = az + t * (b[2] - az);\r\n        return out;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/utils/Vector3.js?");

/***/ }),

/***/ "../../../Akila/webgl/Display.js":
/*!****************************************!*\
  !*** D:/GitHub/Akila/webgl/Display.js ***!
  \****************************************/
/*! exports provided: Display */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Display\", function() { return Display; });\nclass Display {\r\n  constructor(width = 300, height = 300, option = {webGLVersion: 1}) {\r\n    if(Display.ctx) throw `Display est un singleton -> qu'un seul canevas à la fois.`;\r\n\r\n    this.canvas = document.createElement('canvas');\r\n\r\n    this.canvas.id = \"webgl-canvas\";\r\n\r\n    this.conteneur = document.getElementById('webgl-screen');\r\n    if (!this.conteneur) throw `Impossible de créer le canevas, il faut ajouter une balise avec l'id \"webgl-screen\"`;\r\n\r\n    this.conteneur.appendChild(this.canvas);\r\n\r\n    this.ctx = this.canvas.getContext(option.webGLVersion == 2 ? \"webgl2\" : \"webgl\");\r\n    if (!this.ctx) this.ctx = this.canvas.getContext(\"experimental-webgl\");\r\n    if (!this.ctx) throw \"Impossible de d'initialiser le contexte WebGL\";\r\n\r\n    this.loadExtensions();\r\n\r\n    this.use();\r\n\r\n    this.setSize(width, height);\r\n\r\n    this.ctx.enable(this.ctx.DEPTH_TEST);\r\n    this.setClearColor(Math.random(), Math.random(), Math.random(), 1.0);\r\n\r\n    this.ctx.enable(this.ctx.BLEND);\r\n    this.ctx.enable(this.ctx.SAMPLE_ALPHA_TO_COVERAGE);\r\n    this.defaultBlendFunc();\r\n\r\n    this.ctx.enable(this.ctx.CULL_FACE);\r\n  \tthis.ctx.frontFace(this.ctx.CCW);\r\n  \tthis.ctx.cullFace(this.ctx.BACK);\r\n\r\n    this.clear();\r\n  }\r\n\r\n  loadExtensions() {\r\n    this.exts = {\r\n      WEBGL_depth_texture: this.ctx.getExtension('WEBGL_depth_texture')\r\n    }\r\n  }\r\n\r\n  getDiv(){\r\n    return this.conteneur;\r\n  }\r\n\r\n  setSize(w, h){\r\n    this.canvas.width = w;\r\n    this.canvas.height = h;\r\n    this.ctx.viewport(0, 0, w, h);\r\n  }\r\n\r\n  getWidth(){\r\n    return this.canvas.width;\r\n  }\r\n\r\n  getHeight(){\r\n    return this.canvas.height;\r\n  }\r\n\r\n  setClearColor(r, g, b, a){\r\n    this.ctx.clearColor(r, g, b, a);\r\n  }\r\n\r\n  clear(){\r\n    this.ctx.clear(this.ctx.COLOR_BUFFER_BIT | this.ctx.DEPTH_BUFFER_BIT);\r\n  }\r\n\r\n  clearColor(){\r\n    this.ctx.clear(this.ctx.COLOR_BUFFER_BIT);\r\n  }\r\n\r\n  clearDepth(){\r\n    this.ctx.clear(this.ctx.DEPTH_BUFFER_BIT);\r\n  }\r\n\r\n  getCtx(){\r\n    return this.ctx;\r\n  }\r\n\r\n  use(){\r\n    Display.ctx = this.getCtx();\r\n  }\r\n\r\n  useDefaultFrameBuffer(){\r\n    this.ctx.bindFramebuffer(this.ctx.FRAMEBUFFER, null);\r\n    this.ctx.bindRenderbuffer(this.ctx.RENDERBUFFER, null);\r\n    this.ctx.viewport(0, 0, this.getWidth(), this.getHeight());\r\n  }\r\n\r\n  enable(val){\r\n    this.ctx.enable(this.ctx[val]);\r\n  }\r\n\r\n  disable(val){\r\n    this.ctx.disable(this.ctx[val]);\r\n  }\r\n\r\n  blendFunc(sfactor, dfactor) {\r\n    this.ctx.blendFunc(this.ctx[sfactor], this.ctx[dfactor]);\r\n  }\r\n\r\n  defaultBlendFunc() {\r\n    this.ctx.blendFunc(this.ctx.SRC_ALPHA, this.ctx.ONE_MINUS_SRC_ALPHA);\r\n  }\r\n\r\n  blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\r\n    this.ctx.blendFuncSeparate(this.ctx[srcRGB], this.ctx[dstRGB], this.ctx[srcAlpha], this.ctx[dstAlpha]);\r\n  }\r\n\r\n  getCanvas(){\r\n    return this.canvas;\r\n  }\r\n}\r\n\r\nDisplay.ctx = null;\r\n\r\nDisplay.BLEND = \"BLEND\";\r\nDisplay.CULL_FACE = \"CULL_FACE\";\r\nDisplay.DEPTH_TEST = \"DEPTH_TEST\";\r\nDisplay.DITHER = \"DITHER\";\r\nDisplay.POLYGON_OFFSET_FILL = \"POLYGON_OFFSET_FILL\";\r\nDisplay.SAMPLE_ALPHA_TO_COVERAGE = \"SAMPLE_ALPHA_TO_COVERAGE\";\r\nDisplay.SAMPLE_COVERAGE = \"SAMPLE_COVERAGE\";\r\nDisplay.SCISSOR_TEST = \"SCISSOR_TEST\";\r\nDisplay.STENCIL_TEST = \"STENCIL_TEST\";\r\n\r\n/**\r\n * Multiplies all colors by 0.\r\n */\r\nDisplay.ZERO = \"ZERO\";\r\n\r\n/**\r\n * Multiplies all colors by 1.\r\n */\r\nDisplay.ONE\t= \"ONE\";\r\n\r\n/**\r\n * Multiplies all colors by the source colors.\r\n */\r\nDisplay.SRC_COLOR\t= \"SRC_COLOR\";\r\n\r\n/**\r\n * Multiplies all colors by 1 minus each source color.\r\n */\r\nDisplay.ONE_MINUS_SRC_COLOR = \"ONE_MINUS_SRC_COLOR\";\r\n\r\n/**\r\n * Multiplies all colors by the destination color.\r\n */\r\nDisplay.DST_COLOR\t=\t\"DST_COLOR\";\r\n\r\n/**\r\n * Multiplies all colors by 1 minus each destination color.\r\n */\r\nDisplay.ONE_MINUS_DST_COLOR\t= \"ONE_MINUS_DST_COLOR\";\r\n\r\n/**\r\n * Multiplies all colors by the source alpha value.\r\n */\r\nDisplay.SRC_ALPHA\t= \"SRC_ALPHA\";\r\n\r\n/**\r\n * Multiplies all colors by 1 minus the source alpha value.\r\n */\r\nDisplay.ONE_MINUS_SRC_ALPHA\t= \"ONE_MINUS_SRC_ALPHA\";\r\n\r\n/**\r\n * Multiplies all colors by the destination alpha value.\r\n */\r\nDisplay.DST_ALPHA\t= \"DST_ALPHA\";\r\n\r\n/**\r\n * Multiplies all colors by 1 minus the destination alpha value.\r\n */\r\nDisplay.ONE_MINUS_DST_ALPHA\t= \"ONE_MINUS_DST_ALPHA\";\r\n\r\n/**\r\n * Multiplies all colors by a constant color.\r\n */\r\nDisplay.CONSTANT_COLOR = \"CONSTANT_COLOR\";\r\n\r\n/**\r\n * Multiplies all colors by 1 minus a constant color.\r\n */\r\nDisplay.ONE_MINUS_CONSTANT_COLOR = \"ONE_MINUS_CONSTANT_COLOR\";\r\n\r\n/**\r\n * Multiplies all colors by a constant alpha value.\r\n */\r\nDisplay.CONSTANT_ALPHA = \"CONSTANT_ALPHA\";\r\n\r\n/**\r\n * Multiplies all colors by 1 minus a constant alpha value.\r\n */\r\nDisplay.ONE_MINUS_CONSTANT_ALPHA = \"ONE_MINUS_CONSTANT_ALPHA\";\r\n\r\n/**\r\n * Multiplies the RGB colors by the smaller of either the source alpha value or the value of 1 minus the destination alpha value. The alpha value is multiplied by 1.\r\n */\r\nDisplay.SRC_ALPHA_SATURATE = \"SRC_ALPHA_SATURATE\";\r\n\n\n//# sourceURL=webpack:///D:/GitHub/Akila/webgl/Display.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _main1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main1 */ \"./src/main1.js\");\n/* harmony import */ var _main2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./main2 */ \"./src/main2.js\");\n\r\n\r\n\r\nObject(_main2__WEBPACK_IMPORTED_MODULE_1__[\"main2\"])();\r\n\n\n//# sourceURL=webpack:///./src/main.js?");

/***/ }),

/***/ "./src/main1.js":
/*!**********************!*\
  !*** ./src/main1.js ***!
  \**********************/
/*! exports provided: main1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"main1\", function() { return main1; });\n/* harmony import */ var Akila_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! Akila/time */ \"../../../Akila/time.js\");\n/* harmony import */ var Akila_inputs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! Akila/inputs */ \"../../../Akila/inputs.js\");\n/* harmony import */ var Akila_collision__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! Akila/collision */ \"../../../Akila/collision.js\");\n\n\n\n\nconst main1 = () => {\n\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext('2d');\n    const W = canvas.width = 600;\n    const H = canvas.height = 600;\n    const S = 18;\n\n    const time = new Akila_time__WEBPACK_IMPORTED_MODULE_0__[\"Time\"]();\n    const mouse = new Akila_inputs__WEBPACK_IMPORTED_MODULE_1__[\"Mouse\"]();\n    mouse.setDOMElementReference(canvas);\n    const field = new Akila_collision__WEBPACK_IMPORTED_MODULE_2__[\"BroadField2d\"]();\n\n\n    const buffer = new Set();\n\n    const currentPoint = {\n        x: W / 2,\n        y: H / 2\n    }\n\n    time.onTick(() => {\n    });\n\n    time.onDraw(() => {\n        ctx.fillStyle = '#000';\n        ctx.fillRect(0, 0, W, H);\n\n        field.clearAll();\n        if(mouse.isPressed(Akila_inputs__WEBPACK_IMPORTED_MODULE_1__[\"Mouse\"].LEFT_BUTTON)) {\n            currentPoint.x = mouse.posX();\n            currentPoint.y = mouse.posY();\n        }\n\n\n        let a = {};\n        Akila_collision__WEBPACK_IMPORTED_MODULE_2__[\"RayRaster2d\"].addToField(0 / S, 0 / S, (W + 2) / S, H / S, field, a);\n\n        let b = {};\n        Akila_collision__WEBPACK_IMPORTED_MODULE_2__[\"RayRaster2d\"].addToField(currentPoint.x / S, currentPoint.y / S, mouse.posX() / S, mouse.posY() / S, field, b);\n\n        let c = {};\n        Akila_collision__WEBPACK_IMPORTED_MODULE_2__[\"RayRaster2d\"].addToField(W / S, 0,  W / 2 / S, H / S  , field, c);\n\n        for(let x = 0; x < W / S; ++x) {\n            for(let y = 0; y < H / S; ++y) {\n                //const buffer = new Set();\n                buffer.clear();\n                field.query(x, y, buffer);\n                if(buffer.size == 1) ctx.fillStyle = '#0f0';\n                else if(buffer.size == 2) ctx.fillStyle = '#00f';\n                else if(buffer.size == 3) ctx.fillStyle = '#f0f';\n                else ctx.fillStyle = '#000';\n\n                ctx.fillRect(x * S, y * S, S, S);\n            }\n        }\n\n        ctx.strokeStyle = '#f00';\n        ctx.beginPath();\n        ctx.moveTo(currentPoint.x, currentPoint.y);\n        ctx.lineTo(mouse.posX(), mouse.posY());\n        ctx.stroke();\n    });\n\n    time.start();\n}\n\n\n//# sourceURL=webpack:///./src/main1.js?");

/***/ }),

/***/ "./src/main2.js":
/*!**********************!*\
  !*** ./src/main2.js ***!
  \**********************/
/*! exports provided: main2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"main2\", function() { return main2; });\n/* harmony import */ var Akila_collision__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! Akila/collision */ \"../../../Akila/collision.js\");\n/* harmony import */ var Akila_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! Akila/time */ \"../../../Akila/time.js\");\n/* harmony import */ var Akila_inputs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! Akila/inputs */ \"../../../Akila/inputs.js\");\n/* harmony import */ var Akila_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! Akila/utils */ \"../../../Akila/utils.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst multMat3 = (out, a, m, z = 1) => {\r\n    const x = a[0], y = a[1];\r\n    out[0] = x * m[0] + y * m[3] + z * m[6];\r\n    out[1] = x * m[1] + y * m[4] + z * m[7];\r\n\r\n    return out;\r\n}\r\n\r\n\r\nclass CObject {\r\n    constructor(v) {\r\n        this.collider = new Akila_collision__WEBPACK_IMPORTED_MODULE_0__[\"Collider2d\"](v);\r\n        this.position = Akila_utils__WEBPACK_IMPORTED_MODULE_3__[\"Matrix3\"].create();\r\n        Akila_utils__WEBPACK_IMPORTED_MODULE_3__[\"Matrix3\"].identity(this.position);\r\n    }\r\n\r\n    move(x, y) {\r\n        Akila_utils__WEBPACK_IMPORTED_MODULE_3__[\"Matrix3\"].fromTranslation(this.position, [x, y])\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.beginPath();\r\n        let first = true;\r\n\r\n        let buff = new Float32Array(2);\r\n\r\n        for(let v of this.collider.vertices) {    \r\n\r\n            multMat3(buff, v, this.position);\r\n\r\n\r\n            if(first) {\r\n                ctx.moveTo(buff[0], buff[1]);\r\n                first = false;\r\n            } else {\r\n                ctx.lineTo(buff[0], buff[1]);\r\n            }\r\n        }\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n}\r\n\r\n\r\n\r\nconst main2 = () => { \r\n\r\n    const canvas = document.getElementById('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    const W = canvas.width = 600;\r\n    const H = canvas.height = 600;\r\n\r\n    const time = new Akila_time__WEBPACK_IMPORTED_MODULE_1__[\"Time\"]();\r\n    const mouse = new Akila_inputs__WEBPACK_IMPORTED_MODULE_2__[\"Mouse\"]();\r\n    mouse.setDOMElementReference(canvas);\r\n\r\n    const cObject1 = new CObject([\r\n        0, 0,\r\n        0, 100,\r\n        //100, 100\r\n    ]);\r\n\r\n    const cObject2 = new CObject([\r\n        -100, -100,\r\n        0, 100,\r\n        100, 100\r\n    ]);\r\n    cObject2.move(300, 300);\r\n\r\n    time.onTick(() => {\r\n        cObject1.move(mouse.posX(), mouse.posY());\r\n    });\r\n\r\n    time.onDraw(() => {\r\n        ctx.fillStyle = '#000';\r\n        ctx.fillRect(0, 0, W, H);\r\n\r\n        const res = Akila_collision__WEBPACK_IMPORTED_MODULE_0__[\"SAT2d\"].getMin(cObject1.collider, cObject1.position, cObject2.collider, cObject2.position);\r\n        if(res) console.log(res.min);\r\n        ctx.strokeStyle = res == null ? '#0f0' : '#f00';\r\n\r\n        cObject1.draw(ctx);\r\n        cObject2.draw(ctx);\r\n    });\r\n\r\n    time.start();\r\n\r\n    window.observer = {\r\n        ctx,\r\n        cObject1\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/main2.js?");

/***/ })

/******/ });