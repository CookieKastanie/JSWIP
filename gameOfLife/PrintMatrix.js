class PrintMatrix {
    constructor(m) {
        this.matrix = m;
    }

    rotate() { 
        const mat = this.matrix;
        const N = mat.length;

        for (let x = 0; x < N / 2; x++) { 
            for (let y = x; y < N-x-1; y++) { 
                let temp = mat[x][y]; 
                mat[x][y] = mat[y][N-1-x]; 
                mat[y][N-1-x] = mat[N-1-x][N-1-y]; 
                mat[N-1-x][N-1-y] = mat[N-1-y][x]; 
                mat[N-1-y][x] = temp; 
            } 
        } 
    } 

    foreach(cb) {
        const mat = this.matrix;
        const N = mat.length;

        for(let y = 0; y < N; ++y) {
            for(let x = 0; x < N; ++x) {
                if(mat[y][x] == 1)  cb(x - N + 1, y - N + 1);
            }
        }
    }
}


const formes = [
    new PrintMatrix([
        [1]
    ]),
    
    // Spaceships
    new PrintMatrix([
        [0, 1, 0],
        [0, 0, 1],
        [1, 1, 1],
    ]),

    new PrintMatrix([
        [0, 0, 0, 0, 0],
        [0, 1, 1, 1, 1],
        [1, 0, 0, 0, 1],
        [0, 0, 0, 0, 1],
        [1, 0, 0, 1, 0],
    ]),

    new PrintMatrix([
        [0, 0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0, 0],
        [1, 0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0, 1],
        [1, 0, 0, 0, 0, 1],
        [0, 1, 1, 1, 1, 1],
    ]),

    new PrintMatrix([
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 1, 1, 0, 0, 0],
        [1, 0, 0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0, 0, 1],
        [1, 0, 0, 0, 0, 0, 1],
        [0, 1, 1, 1, 1, 1, 1],
    ]),

    //Oscillators
    new PrintMatrix([
        [0, 0, 0],
        [1, 1, 1],
        [0, 0, 0],
    ]),

    new PrintMatrix([
        [0, 0, 0, 0],
        [0, 1, 1, 1],
        [1, 1, 1, 0],
        [0, 0, 0, 0],
    ]),

    new PrintMatrix([
        [1, 1, 0, 0],
        [1, 1, 0, 0],
        [0, 0, 1, 1],
        [0, 0, 1, 1],
    ]),

    new PrintMatrix([
        [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],
        [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],
        [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],
        [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],
        [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],
        [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],
        [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],
    ]),

    new PrintMatrix([
        [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 1, 0, 1, 0, 0, 0],
        [0, 0, 0, 1, 0, 0, 0, 1, 0, 0],
        [0, 0, 0, 1, 0, 0, 0, 1, 0, 0],
        [0, 0, 0, 1, 0, 0, 0, 1, 0, 0],
        [0, 0, 0, 1, 0, 0, 0, 1, 0, 0],
        [0, 0, 0, 1, 0, 0, 0, 1, 0, 0],
        [0, 0, 0, 1, 0, 0, 0, 1, 0, 0],
        [0, 0, 0, 0, 1, 0, 1, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
    ]),

    //Still lifes
    new PrintMatrix([
        [1, 1],
        [1, 1],
    ]),

    new PrintMatrix([
        [0, 0, 0, 0],
        [0, 1, 1, 0],
        [1, 0, 0, 1],
        [0, 1, 1, 0],
    ]),

    new PrintMatrix([
        [0, 1, 1, 0],
        [1, 0, 0, 1],
        [0, 1, 0, 1],
        [0, 0, 1, 0],
    ]),

    new PrintMatrix([
        [1, 1, 0],
        [1, 0, 1],
        [0, 1, 0],
    ]),

    new PrintMatrix([
        [0, 1, 0],
        [1, 0, 1],
        [0, 1, 0],
    ]),
]

